[{"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\index.js":"1","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\App.js":"2","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\reportWebVitals.js":"3","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\firebase-config.js":"4","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\config\\settings\\settings.js":"5","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\styles\\Global.js":"6","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\screens\\Home\\Home.js":"7","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\auth\\context\\context.js":"8","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js":"9","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Table\\Table.js":"10","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js":"11","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\login.js":"12","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Content\\Content.js":"13","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Loader\\Loader.js":"14","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js":"15","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js":"16","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js":"17","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarItem\\SidebarItem.js":"18","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js":"19","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarHeader\\SidebarHeader.js":"20","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js":"21","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\projects\\projects.js":"22","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\NavbarItem\\NavbarItem.js":"23","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js":"24","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\errors\\errors.js":"25","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\ModalMessage\\ModalMessage.js":"26","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js":"27","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\architecture\\architecture.js":"28","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\projects\\projects.js":"29","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js":"30","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\DeleteMessage\\DeleteMessage.js":"31","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js":"32","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js":"33","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\elements\\elements.js":"34","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js":"35","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js":"36","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\versions\\versions.js":"37","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js":"38","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Menu\\Menu.js":"39","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js":"40","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js":"41","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\versions\\versions.js":"42","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js":"43","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js":"44"},{"size":877,"mtime":1652825345967,"results":"45","hashOfConfig":"46"},{"size":1638,"mtime":1667957107930,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1652825345969,"results":"48","hashOfConfig":"46"},{"size":795,"mtime":1667957107945,"results":"49","hashOfConfig":"46"},{"size":398,"mtime":1669588607481,"results":"50","hashOfConfig":"46"},{"size":251,"mtime":1652825345977,"results":"51","hashOfConfig":"46"},{"size":3305,"mtime":1672776906605,"results":"52","hashOfConfig":"46"},{"size":101,"mtime":1652825345902,"results":"53","hashOfConfig":"46"},{"size":628,"mtime":1666829805976,"results":"54","hashOfConfig":"46"},{"size":3566,"mtime":1675551620972,"results":"55","hashOfConfig":"46"},{"size":3478,"mtime":1672777979640,"results":"56","hashOfConfig":"46"},{"size":1083,"mtime":1666799628618,"results":"57","hashOfConfig":"46"},{"size":7544,"mtime":1667957107935,"results":"58","hashOfConfig":"46"},{"size":265,"mtime":1652825345916,"results":"59","hashOfConfig":"46"},{"size":3177,"mtime":1675549428203,"results":"60","hashOfConfig":"46"},{"size":1037,"mtime":1652825345934,"results":"61","hashOfConfig":"46"},{"size":1758,"mtime":1652825345919,"results":"62","hashOfConfig":"46"},{"size":1993,"mtime":1665158877559,"results":"63","hashOfConfig":"46"},{"size":8168,"mtime":1672778205511,"results":"64","hashOfConfig":"46"},{"size":2209,"mtime":1672778230768,"results":"65","hashOfConfig":"46"},{"size":8397,"mtime":1675761300003,"results":"66","hashOfConfig":"46"},{"size":3551,"mtime":1652825345962,"results":"67","hashOfConfig":"46"},{"size":1030,"mtime":1672778215845,"results":"68","hashOfConfig":"46"},{"size":6408,"mtime":1665160090579,"results":"69","hashOfConfig":"46"},{"size":1224,"mtime":1666799628636,"results":"70","hashOfConfig":"46"},{"size":354,"mtime":1652825345922,"results":"71","hashOfConfig":"46"},{"size":4329,"mtime":1675542912668,"results":"72","hashOfConfig":"46"},{"size":4505,"mtime":1652825345952,"results":"73","hashOfConfig":"46"},{"size":2302,"mtime":1652825345900,"results":"74","hashOfConfig":"46"},{"size":672,"mtime":1652825345909,"results":"75","hashOfConfig":"46"},{"size":729,"mtime":1652825345907,"results":"76","hashOfConfig":"46"},{"size":648,"mtime":1652825345928,"results":"77","hashOfConfig":"46"},{"size":2265,"mtime":1652825345896,"results":"78","hashOfConfig":"46"},{"size":885,"mtime":1666799628617,"results":"79","hashOfConfig":"46"},{"size":2200,"mtime":1652825345911,"results":"80","hashOfConfig":"46"},{"size":543,"mtime":1652825345954,"results":"81","hashOfConfig":"46"},{"size":4796,"mtime":1665159464169,"results":"82","hashOfConfig":"46"},{"size":3722,"mtime":1665158877558,"results":"83","hashOfConfig":"46"},{"size":3309,"mtime":1666799628622,"results":"84","hashOfConfig":"46"},{"size":8886,"mtime":1675552203136,"results":"85","hashOfConfig":"46"},{"size":8043,"mtime":1675759514820,"results":"86","hashOfConfig":"46"},{"size":2503,"mtime":1665159464157,"results":"87","hashOfConfig":"46"},{"size":1310,"mtime":1669587860399,"results":"88","hashOfConfig":"46"},{"size":2826,"mtime":1675394186610,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1pxaff4",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\index.js",[],["186","187"],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\App.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\reportWebVitals.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\firebase-config.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\config\\settings\\settings.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\styles\\Global.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\screens\\Home\\Home.js",["188"],"// @ts-nocheck\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport clsx from \"clsx\";\n\nimport Sidebar from \"../../components/SideBar/Sidebar\";\nimport Content from \"../../components/Content/Content\";\nimport Table from \"../../components/Table/Table\";\n\nimport Swal from \"sweetalert2\";\n\nimport AppContext from \"../../auth/context/context\";\nimport { googleAuth } from \"../../firebase/googleAuth\";\nimport { postLogin } from \"../../api/login/login\";\n\n/** Componente que representa la página\n *  principal de navegación\n */\nfunction Home() {\n  const classes = useStyles();\n  const [drawerItems, setDrawerItems] = useState();\n  const [open, setOpen] = useState(true);\n  const [load, setLoad] = useState(true);\n  const {\n    user,\n    setUser,\n    reloadSidebar,\n    selectedProject,\n    setSelectedProject,\n  } = useContext(AppContext);\n\n  /**\n   * Llamar a google auth para establecer ususario\n   */\n  const login = async () => {\n    let drawer = await googleAuth(setUser);\n    setDrawerItems(drawer);\n    setLoad(false);\n  };\n\n  /**\n   * Mensaje de confirmación para cerrar sesión\n   */\n  const logout = () => {\n    Swal.fire({\n      text: \"¿Seguro que deseas cerrar sesión?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"var(--success)\",\n      cancelButtonColor: \"var(--error)\",\n      confirmButtonText: \"Si, seguro\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setSelectedProject();\n        setLoad(true);\n        localStorage.removeItem(\"user\");\n        setUser(null);\n        setLoad(false);\n      }\n    });\n  };\n\n  /**\n   * Cambiar estado de usuario e iniciar sesion\n   */\n  async function changeState() {\n    login();\n  }\n\n  /**\n   * Actualizar arreglo de proyectos\n   */\n  const getProject = async () => {\n    let elements = await postLogin(user, setUser);\n    setDrawerItems(elements);\n    setLoad(false);\n  };\n\n  /**\n   * Llamar a la actualizacion de proyectos\n   */\n  async function get() {\n    getProject();\n  }\n\n  useEffect(() => {\n    setLoad(false);\n    if (user || reloadSidebar) {\n      setLoad(true);\n      get();\n    }\n  }, [user, reloadSidebar]);\n\n  return (\n    <>\n      <Sidebar\n        items={drawerItems}\n        login={changeState}\n        logout={logout}\n        loader={load}\n        open={open}\n        setOpen={setOpen}\n      />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        {selectedProject ? (\n          <div>\n            <Content />\n            <Table />\n          </div>\n        ) : null}\n      </main>\n    </>\n  );\n}\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    paddingLeft: theme.spacing(2),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginTop: 70,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 270,\n  },\n}));\n\nexport default Home;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\auth\\context\\context.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Table\\Table.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\login.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Content\\Content.js",["189","190","191","192","193"],"// @ts-nocheck\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./Content.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport AppContext from \"../../auth/context/context\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\n// import cytoscape from 'cytoscape';\n// import cise from 'cytoscape-cise';\nimport Loader from \"../Loader/Loader\";\nimport nodesHelper from \"../../helpers/nodes/nodes\";\n\n/**\n * Componente que representa el contenido\n * de la arquitectura seleccionada\n */\nconst Content = () => {\n  // cytoscape.use( cise );\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n  const [elementos, setElementos] = useState();\n  const [load, setLoad] = useState(false);\n  const [composite2, setComposite2] = useState(false);\n  const [listT, setListT] = useState({nodes: ''});\n  const {\n    selectedProject,\n    cy, setCy,\n    selectedNodes, setSelectedNodes,\n    setSelectionModel,\n    composite\n  } = useContext(AppContext);\n\n    /**\n   * Obtener el tipo de relación\n   * @param {JSON} ele Objeto de cytoscape\n   * @returns String tipo de label\n   */\n  const getEdgeLabel = (ele) => {\n    if(!checked) return \"\";\n    switch (ele.scratch(\"relation\")) {\n      case \"implements\":\n        return \"Implementa\";\n      case \"extends\":\n        return \"Extiende\";\n      case \"use\":\n        return \"Usa\";\n      default:\n        return \"\";\n    }\n  }\n\n\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\n  var state = {\n    layout: {\n      name: 'circle',\n      fit: true,\n      padding: 30,\n      avoidOverlap: true,\n      nodeDimensionsIncludeLabels: true,\n      avoidOverlapPadding: 150,\n    },\n    layout2: {\n      name: 'circle',\n      clusters: listT,\n      fit: true,\n      padding: 30,\n      avoidOverlap: true,\n      nodeDimensionsIncludeLabels: true,\n      avoidOverlapPadding: 150,\n    },\n    stylesheet: [\n      {\n        selector: 'node',\n        style: {\n          content: 'data(id)',\n          'font-size': 20,\n          shape: 'round-rectangle',\n          'text-wrap': 'wrap',\n          'text-max-width': 80,\n          'text-valign': 'center',\n          'text-outline-color': '#18202C',\n          width: 270,\n          color: 'white',\n          height: 40,\n          'background-color': 'data(bg)',\n        },\n      },\n      {\n        selector: 'edge',\n        style: {\n          content: getEdgeLabel,\n          width: 4,\n          'font-size': 20,\n          'curve-style': 'bezier',\n          'edge-text-rotation': 'autorotate',\n          'target-arrow-shape': 'triangle-tee',\n          'text-valign': 'top',\n          'text-halign': 'center',\n          color: '#fff',\n          'text-outline-color': '#18202C',\n          'text-outline-width': 3,\n          'line-color': '#18202C',\n          'target-arrow-color': '#18202C',\n        },\n      },\n    ],\n    stylesheet2: [\n      {\n        selector: 'node',\n        style: {\n          content: 'data(id)',\n          'font-size': 20,\n          shape: 'round-rectangle',\n          'text-wrap': 'wrap',\n          'text-max-width': 80,\n          'text-valign': 'center',\n          width: 270,\n          color: 'white',\n          height: 40,\n          'background-color': 'data(bg)',\n        },\n      },\n      {\n        selector: 'edge',\n        style: {\n          content: getEdgeLabel,\n          width: 4,\n          'font-size': 20,\n          'curve-style': 'bezier',\n          'edge-text-rotation': 'autorotate',\n          'target-arrow-shape': 'triangle-tee',\n          'text-valign': 'top',\n          'text-halign': 'center',\n          color: '#fff',\n          'text-outline-color': '#18202C',\n          'text-outline-width': 3,\n          'line-color': '#18202C',\n          'target-arrow-color': '#18202C',\n        },\n      },\n    ],\n  };\n\n  /**\n   * Mostrar u ocultar el nombre de las\n   * relaciones entre los nodos\n   */\n  const setEdgesLabel = () => {\n    if (!checked) {\n      cy.style().selector(\"edge\").style({\n        content: \"\",\n      });\n    } else {\n      cy.style()\n        .selector(\"edge\")\n        .style({\n          content: getEdgeLabel\n        });\n    }\n  };\n\n  /**\n   * Manejador de evento al seleccionar nodo\n   * @param {Event} event referencia al elemento\n   */\n  const selectNodeHandler = (evt) => {\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\n    nodesHelper.addNode(\n      nodeId,\n      selectedNodes,\n      setSelectedNodes,\n      cy,\n      setSelectionModel\n    );\n    evt.preventDefault();\n  };\n\n  /**\n   * Manejador de evento al dejar de seleccionar nodo\n   * @param {Event} event referencia al elemento\n   */\n  const unselectNodeHandler = (evt) => {\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\n    nodesHelper.removeNode(\n      nodeId,\n      selectedNodes,\n      setSelectedNodes,\n      cy,\n      setSelectionModel\n    );\n    nodesHelper.repaintEdges(selectedNodes, cy);\n  };\n\n  useEffect(() => {\n    if (cy) {\n      cy.on(\"select\", \"node\", selectNodeHandler);\n      cy.on(\"unselect\", \"node\", unselectNodeHandler);\n      setSelectionModel([]);\n      setSelectedNodes(new Set());\n    }\n  }, [cy]);\n\n  useEffect(() => {\n    if (cy) {\n      setEdgesLabel();\n    }\n  }, [checked, cy]);\n\n  // useEffect(() => {\n  //   console.log(\"ENTRO\")\n  //   if (composite) {\n  //     let composite_components = []\n  //     elementos.list_t.map((item) => {\n  //       composite_components.push(item.composite_component);\n  //     });\n  //     setListT(composite_components);\n  //     setComposite2(true)\n  //   }\n  // }, [composite]);\n\n  useEffect(()=>{\n\n  },[composite])\n\n  useEffect(() => {\n    setLoad(true);\n    setElementos(selectedProject.elements);\n  }, [selectedProject]);\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false);\n      setChecked(false);\n    }\n  }, [elementos, load]);\n\n  return (\n    <>\n      {load ? (\n        <Loader />\n      ) : elementos ? (\n        <div>\n          <div className={classes.onClose}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={checked}\n                  onChange={() => setChecked((prev) => !prev)}\n                />\n              }\n              labelPlacement=\"start\"\n              style={{ marginRight: 5 }}\n              label=\"\"\n            />\n          </div>\n\n          <CytoscapeComponent\n            className=\"component\"\n            cy={(cyt) => {\n              setCy(cyt);\n            }}\n            elements={CytoscapeComponent.normalizeElements(elementos)}\n            id=\"component\"\n            layout={state.layout}\n            maxZoom={2}\n            pan={{ x: 150, y: 30 }}\n            stylesheet={state.stylesheet}\n            zoom={0.5}\n          />\n        </div>\n      )\n      // : elementos && composite2 ? (\n      //   <CytoscapeComponent\n      //       className=\"component\"\n      //       cy={(cyt) => {\n      //         setCy(cyt);\n      //       }}\n      //       elements={CytoscapeComponent.normalizeElements(elementos)}\n      //       id=\"component\"\n      //       layout={state.layout2}\n      //       maxZoom={2}\n      //       pan={{ x: 150, y: 30 }}\n      //       stylesheet={state.stylesheet2}\n      //       zoom={0.5}\n      //     />\n      // )\n      : null }\n    </>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  onClose: {\n    position: \"absolute\",\n    right: \"18px\",\n    top: \"75px\",\n    zIndex: 3,\n  },\n}));\n\nexport default Content;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js",["194"],"// @ts-nocheck\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nimport EdgesTable from \"./Edges/Edges\";\nimport NodesTable from \"./Nodes/Nodes\";\nimport { TextField } from \"@material-ui/core\";\n\n/**\n * Componente que representa al contenedor\n * de cada panel en las tabs\n */\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={2}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n/**\n * Manejador de props para cada tab\n * @param {int} index tab actual seleccionada\n */\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\n/**\n * Componente que representa\n * al contenedor de las tablas\n * para manejo de nodos y aristas\n */\nconst TableItem = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  /**\n   * Manejador de eventos sobre\n   * cambios en tabs\n   * @param {Event} event\n   * @param {int} newValue nuevo indice\n   */\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  /**\n   * Manejador de eventos sobre\n   * cambios en el indice de las tabs\n   * @param {int} index nuevo indice\n   */\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Nodos\" {...a11yProps(0)} />\n          <Tab label=\"Relaciones\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <NodesTable closeDrawable={(value) => props.closeDrawable(value)}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <EdgesTable />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"auto\",\n    zIndex: -1\n  },\n  inputs: {\n    padding: theme.spacing(2),\n  },\n  inputAlign: {\n    marginRight: theme.spacing(1.5),\n  }\n}));\n\nexport default TableItem;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarItem\\SidebarItem.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js",["195"],"import React, { useContext, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  manageCreateVersion,\n  manageDeleteVersion,\n  manageEditVersion,\n} from \"../../helpers/versions/versions\";\nimport { downloadGraph } from \"../../helpers/content/downloader\";\n\nimport Swal from \"sweetalert2\";\n\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport AppContext from \"../../auth/context/context\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport Excel from \"../Excel/ExcelDownloader\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"../FileReader/FileReader\";\nimport nodeHelper from \"../../helpers/nodes/nodes\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\n\n/**\n * Componente que representa la barra\n * superior de navegacion\n */\nconst Navbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n  const { user, selectedProject, setSelectedProject, setReloadSidebar, cy } =\n    useContext(AppContext);\n  const [showModal, setShowModal] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  /**\n   * Cerrar proyecto seleccionado\n   */\n  const onClose = () => {\n    Swal.fire({\n      text: \"¿Seguro que deseas cerrar \" + selectedProject.versionName + \"?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"var(--success)\",\n      cancelButtonColor: \"var(--error)\",\n      confirmButtonText: \"Si, seguro\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setSelectedProject();\n      }\n    });\n  };\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          {selectedProject ? (\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <div className={classes.title}>\n                <h1\n                  className={classes.h1}\n                  style={{ marginLeft: 0, minWidth: 145 }}\n                >\n                  {selectedProject.versionName}\n                </h1>\n                <IconButton\n                  aria-label=\"open edit\"\n                  className={classes.icon}\n                  onClick={() =>\n                    manageEditVersion(\n                      user,\n                      selectedProject,\n                      setSelectedProject,\n                      setReloadSidebar\n                    )\n                  }\n                >\n                  <EditIcon />\n                </IconButton>\n                {selectedProject.versions > 1 ? (\n                  <IconButton\n                    aria-label=\"open delete\"\n                    className={classes.icon}\n                    onClick={() =>\n                      manageDeleteVersion(\n                        user,\n                        selectedProject,\n                        setSelectedProject,\n                        setReloadSidebar\n                      )\n                    }\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                ) : null}\n              </div>\n              <div style={{ textAlign: \"right\" }}>\n                <NavbarItem\n                  icon={<GetAppIcon />}\n                  title={\"Descargar\"}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"true\"}\n                  onClick={handleClick}\n                />\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  PaperProps={{\n                    style: {\n                      padding: 10,\n                    },\n                  }}\n                >\n                  <Excel\n                    fileName={selectedProject.versionName}\n                    nodesData={nodeHelper.getNodeData(selectedProject)}\n                    relationsData={nodeHelper.getRelationData(selectedProject)}\n                  />\n                  <MenuItem\n                    onClick={() =>\n                      downloadGraph(\"jpg\", cy, selectedProject.versionName)\n                    }\n                  >\n                    Descargar JPG\n                  </MenuItem>\n                  <MenuItem\n                    onClick={() =>\n                      downloadGraph(\"png\", cy, selectedProject.versionName)\n                    }\n                  >\n                    Descargar PNG\n                  </MenuItem>\n                </Menu>\n                <NavbarItem\n                  icon={<CreateIcon />}\n                  title={\"Crear nueva versión\"}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"false\"}\n                  onClick={() =>\n                    manageCreateVersion(user, selectedProject, setReloadSidebar)\n                  }\n                />\n                <NavbarItem\n                  icon={<AddIcon />}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"false\"}\n                  title={\"Agregar elementos\"}\n                  onClick={() => setShowModal(true)}\n                />\n\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onClose}\n                  edge=\"start\"\n                >\n                  <HighlightOffIcon />\n                </IconButton>\n              </div>\n            </div>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n      {showModal ? (\n        <Modal\n          open={showModal}\n          onClose={() => setShowModal(false)}\n          projectIndex={selectedProject.projectIndex}\n          type={\"Elementos\"}\n        />\n      ) : null}\n    </>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst drawerWidth = 280;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"var(--background)\",\n  },\n\n  hide: {\n    display: \"none\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    minWidth: 200,\n    flexShrink: 0,\n    backgroundColor: \"var(--primaryDark)\",\n  },\n\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n\n  h1: {\n    color: \"var(--background)\",\n    margin: \"auto\",\n    fontFamily: \"var(font-family-content)\",\n    display: \"inline\",\n    paddingRight: 16,\n    fontSize: 24,\n  },\n\n  icon: {\n    color: \"var(--background)\",\n    paddingRight: 0,\n    paddingLeft: 5,\n  },\n}));\n\nexport default Navbar;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js",["196"],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\projects\\projects.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\NavbarItem\\NavbarItem.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js",["197","198"],"import React, { useContext, useState } from \"react\";\nimport \"./FileReader.css\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\nimport { submitArchitecture } from \"../../helpers/architecture/architecture\";\nimport { manageElementsSubmit } from \"../../helpers/elements/elements\";\n\nimport AppContext from \"../../auth/context/context\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Loader from \"../Loader/Loader\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { manageErrors } from \"../../helpers/errors/errors\";\n\n/**\n * Componente que representa pop-up\n * para añadir archivos\n */\nconst FileReader = ({ onClose, open, projectIndex, type }) => {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [valid, setValid] = useState(true);\n  const [loader, setLoader] = useState(false);\n  const {\n    user,\n    setReloadSidebar,\n    selectedProject, setSelectedProject,\n  } = useContext(AppContext);\n\n  /**\n   * Manejar acción en base al tipo de data a subir a\n   * la base de datos\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\n   */\n  const handleSubmit = async (allFiles) => {\n    var response;\n    setLoader(true);\n    switch (type.toLowerCase()) {\n      case \"arquitectura\":\n        if (name !== \"\") {\n          setLoader(true);\n          response = await manageArchitectureSubmit(allFiles);\n          manageResponse(response);\n          break;\n        } else {\n          setValid(false);\n          break;\n        }\n      case \"elementos\":\n        setLoader(true);\n        manageElementsSubmit(\n          user,\n          allFiles,\n          selectedProject,\n          setSelectedProject,\n          setReloadSidebar\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Manejar los modals a mostrar en base a\n   * la respuesta obtenida de la API\n   * @param {JSON} response respuesta de la llamada a la API\n   */\n  const manageResponse = (response) => {\n    setReloadSidebar(false);\n    if (Number.isInteger(response)) {\n      manageErrors(response)\n    } else {\n      ModalMessage(\"¡Arquitectura creada!\", \" \", \"success\", false, 4000);\n    }\n  };\n\n  /**\n   * Llamada a la API para agregar una nueva arquitectura\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\n   * @returns JSON de la respuesta de la API\n   */\n  const manageArchitectureSubmit = async (allFiles) => {\n    const response = await submitArchitecture(\n      allFiles,\n      user,\n      name,\n      projectIndex,\n      setReloadSidebar\n    );\n    return response;\n  };\n\n  /**\n   * Actualizar el nombre según se actualice el TextField\n   * @param {Event} event objeto de tipo evento\n   */\n  const handleChange = (event) => {\n    setValid(true);\n    setName(event.target.value);\n  };\n\n  React.useEffect(() => {\n    if (loader) {\n      setTimeout(setLoader(false), 5000);\n      onClose();\n    }\n  }, [loader]);\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={onClose}\n      >\n        <div className={classes.paper}>\n          {loader ? (\n            <Loader />\n          ) : (\n            <>\n              <div>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onClose}\n                  className={classes.onClose}\n                  edge=\"start\"\n                >\n                  <HighlightOffIcon />\n                </IconButton>\n                <h2 className={classes.h1}>Agregar prueba {type}</h2>\n              </div>\n\n              {type.toLowerCase() === \"arquitectura\" ? (\n                <>\n                  <TextField\n                    required\n                    id=\"outlined-basic\"\n                    label=\"Nombre prueba\"\n                    value={name}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  />\n                  {!valid ? (\n                    <div className={classes.validacion}>\n                      * El nombre de la arquitectura es obligatorio{\" \"}\n                    </div>\n                  ) : null}\n                </>\n              ) : null}\n              <Dropzone\n                onSubmit={handleSubmit}\n                styles={{ dropzone: { maxHeight: 200, maxWidth: 400 } }}\n                accept=\"text/xml\"\n                inputContent={(files, extra) =>\n                  extra.reject\n                    ? \"Solo cargar archivos .xml\"\n                    : \"Agrega archivos o hacer clic para buscar\"\n                }\n                styles={{\n                  dropzoneReject: {\n                    borderColor: \"red\",\n                    backgroundColor: \"#DAA\",\n                  },\n                  inputLabel: (files, extra) =>\n                    extra.reject ? { color: \"red\" } : {},\n                }}\n              />\n            </>\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    top: \"24%\",\n    left: \"23%\",\n    width: \"60%\",\n    minHeight: 300,\n    maxHeight: 600,\n    overflow: \"auto\",\n    border: \"none\",\n    borderRadius: 8,\n    background: \"var(--background)\",\n    boxShadow: theme.shadows[5],\n    padding: \"1.25rem\",\n    outline: \"none\",\n    animationDuration: \"0.3s\",\n    animationTimingFunction: \"ease\",\n    animationDelay: \"0s\",\n    animationIterationCount: 1,\n    animationDirection: \"normal\",\n    animationFillMode: \"none\",\n    animationPlayState: \"running\",\n  },\n  h1: {\n    color: \"var(--primaryDark)\",\n    margin: \"auto\",\n    marginBottom: 35,\n    fontSize: \"1.875rem\",\n    textAlign: \"center\",\n    fontFamily: \"var(font-family-content)\",\n  },\n  validacion: {\n    color: \"var(--error)\",\n    fontSize: 13,\n    margin: 5,\n  },\n  onClose: {\n    position: \"relative\",\n    left: \"98%\",\n    top: \"-9px\",\n    backgroundColor: \"var(primaryDark)\",\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n  },\n}));\n\nexport default FileReader;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\errors\\errors.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\ModalMessage\\ModalMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\architecture\\architecture.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\projects\\projects.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\DeleteMessage\\DeleteMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\elements\\elements.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\versions\\versions.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Menu\\Menu.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js",["199","200","201","202","203"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport {\n  ManageMetrics,\n  ManageCombineMetrics,\n  ManageCreateCompositeComponent,\n} from '../../../helpers/metrics/metrics';\n\nimport AppContext from \"../../../auth/context/context\";\nimport Loader from \"../../Loader/Loader\";\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\nimport \"./inputs.css\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Button } from \"@material-ui/core\";\nimport { manageElementsUpdate } from '../../../helpers/elements/elements';\n\n/**\n * Componente que representa\n * la tabla de aristas del proyecto selecionado\n */\n\n\nconst EdgesTable = () => {\n  const { user, selectedProject, setSelectedProject, setComposite, /* elements setReloadSidebar*/ } = useContext(AppContext);\n  const [loader, setLoader] = useState(true);\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\n  const [loadingComponents, setLoadingComponents] = useState(false);\n\n  const columns1 = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'source', headerName: 'Origen', width: 180 },\n    { field: 'target', headerName: 'Destino', width: 180 },\n    { field: 'relation', headerName: 'Relación', width: 150 },\n    { field: 'coupling', headerName: 'Coupling', width: 150 },\n    { field: 'abstractness', headerName: 'Abstracción', width: 180 },\n    { field: 'instability', headerName: 'Inestabilidad', width: 180 },\n    { field: 'dms', headerName: 'DMS', width: 150 },\n    {\n      field: 'nameRessemblance',\n      headerName: 'Semejanza de Nombre',\n      width: 180,\n    },\n    { field: 'packageMapping', headerName: 'Mapeo de Paquetes', width: 180 },\n    { field: 'overall_q', headerName: 'Q', width: 100 },\n  ];\n\n  // Getting the values of each input fields\n  const [dms, setDms] = useState(15);\n  const [nameResemblance, setNameResemblance] = useState(35);\n  const [packageMapping, setPackageMapping] = useState(25);\n  const [umbralName, setUmbralName] = useState(40);\n  const [umbralCoupling, setUmbralCoupling] = useState(0.45);\n  const [umbral, setUmbral] = useState(-0.1);\n  const [total, setTotal] = useState(0);\n  const [weighing, setWeighing ] = useState({\n    dms: dms,\n    coupling: umbralCoupling,\n    name_resemblance: nameResemblance,\n    package_mapping: packageMapping\n  })\n  const [render, setRender] = useState(false)\n  const [enable, setEnable] = useState(true)\n\n\n\n  // Calculate the sum total of all the input fields\n  function calculateTotal() {\n    const sum = dms + nameResemblance + packageMapping;\n    setTotal(sum);\n  }\n\n  // Getting all the nodes and mapping through each item\n  let nodesDos = selectedProject.elements.nodes.map((node) => {\n    return {\n      id: node.data.id,\n      name: node.data.name,\n      module: node.data.module,\n      incomompleteProperties: node.data.incomompleteProperties,\n    };\n  });\n\n  // Getting all the edges (relaciones)\n  let edgesDos = nodeHelper.getRelationData(selectedProject);\n\n  // For loop to get the Q and answer\n  function calculatelistas(){\n    ManageCreateCompositeComponent(user, selectedProject, umbral);\n    setComposite(true)\n  }\n\n  async function combineMetrics(setRender, render) {\n    const q = await ManageCombineMetrics(user, selectedProject, weighing);\n    setRender(!render);\n    return q\n  }\n\n  useEffect(() => {\n    setLoader(false);\n  }, [selectedProject.elements]);\n\n  useEffect(()=>{\n\n    manageElementsUpdate(\n      user,\n      selectedProject,\n      setSelectedProject,\n    );\n\n    edgesDos = nodeHelper.getRelationData(selectedProject);\n  },[render])\n\n  useEffect(() => {\n    setWeighing({\n       dms: dms,\n       coupling: umbralCoupling,\n       name_resemblance: nameResemblance,\n       package_mapping: packageMapping,\n     });\n    return calculateTotal();\n  }, [dms, nameResemblance, packageMapping, umbralCoupling]);\n\n\n\n  return (\n    <div style={{ height: '80vh', width: '100%', overflow: 'scroll' }}>\n      <div className=\"form-wrapper\">\n        <form className=\"form-styles\">\n          <div className=\"input\">\n            <div className=\"input-align\">\n              <input\n                value={dms}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setDms(+e.target.value);\n                  calculateTotal();\n                }}\n                className=\"input-styles\"\n                placeholder=\"ejm. 15\"\n                name=\"dms\"\n              />\n              <label className=\"input-label\">Peso DMS</label>\n            </div>\n            <div className=\"input-align\">\n              <input\n                className=\"input-styles\"\n                placeholder=\"ejm. 35\"\n                name=\"paquete\"\n                value={packageMapping}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setPackageMapping(+e.target.value);\n                  calculateTotal();\n                }}\n              />\n              <label className=\"input-label\">Peso Mapeo de Paquete</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.45\"\n                name=\"umbralS\"\n                value={nameResemblance}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setNameResemblance(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Peso Semejanza de Nombre</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.45\"\n                name=\"umbralS\"\n                value={umbralName}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbralName(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Semejanza</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.65\"\n                name=\"umbralA\"\n                value={umbralCoupling}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbralCoupling(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Acoplamiento</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"Umbral\"\n                name=\"umbralQ\"\n                value={umbral}\n                type=\"number\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbral(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Q</label>\n            </div>\n          </div>\n          <div className=\"buttons\">\n            {!loadingMetrics ? (\n              <Button\n                className=\"btn-total\"\n                onClick={async () => {\n                  setLoadingMetrics(true);\n                  calculateTotal();\n                  await ManageMetrics(user, selectedProject, umbralName);\n                  setEnable(false);\n                  setLoadingMetrics(false);\n                }}\n              >\n                Calcular Metricas\n              </Button>\n            ) : (\n              <Loader />\n            )}\n            {!loadingComponents ? (\n              <Button\n                className=\"btn-total\"\n                disabled={enable}\n                onClick={async () => {\n                  setLoadingComponents(true);\n                  await combineMetrics(setRender, render);\n                  await calculatelistas();\n                  setEnable(true);\n                  setLoadingComponents(false);\n                }}\n              >\n                Unir Componentes\n              </Button>\n            ) : (\n              <Loader />\n            )}\n          </div>\n        </form>\n      </div>\n      <div className=\"total-sum\">\n        <p>\n          Total:<span>{total}</span>\n        </p>\n      </div>\n      {/* {total <= 100 ? (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          El total de los pesos no puede ser mayor a 100 —{' '}\n          <strong>Vuelve a calcular!</strong>\n        </Alert>\n      ) : (\n        <Alert severity=\"success\">\n          <AlertTitle>Calculo Exitoso</AlertTitle>\n        </Alert>\n      )} */}\n      {!loader ? (\n        <DataGrid rows={edgesDos} columns={columns1} pageSize={50} />\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n}\n\nexport default EdgesTable;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js",["204","205","206"],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\versions\\versions.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js",["207","208","209","210"],"import React, { useContext } from \"react\";\nimport {\n  putMetrics,\n  combineMetrics,\n  compositeComponents,\n} from '../../api/metrics/metrics.js';\n\nimport AppContext from \"../../auth/context/context.js\"\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\n\n\n\n\nconst ManageMetrics = async (user, selectedProject, umbralName) => {\n    // setReloadSidebar(true);\n        await putMetrics(user,\n        selectedProject.projectIndex,\n        selectedProject.arcIndex,\n        selectedProject.verIndex,\n        umbralName);\n\n      // ModalMessage(\n      //   \"¡Metricas calculadas con exito!\",\n      //   \" \",\n      //   \"success\",\n      //   false,\n      //   4000\n      // );\n    //window.location.reload()\n  };\n\n\n  const ManageCombineMetrics = async (user, selectedProject, weighing) => {\n    await combineMetrics(\n      user,\n      selectedProject.projectIndex,\n      selectedProject.arcIndex,\n      selectedProject.verIndex,\n      weighing\n    );\n  }\n\n  const ManageCreateCompositeComponent = async (user, selectedProject, umbral_q) => {\n    await compositeComponents (\n      user,\n      selectedProject.projectIndex,\n      selectedProject.arcIndex,\n      selectedProject.verIndex,\n      umbral_q\n    )\n  }\n\n  export { ManageMetrics, ManageCombineMetrics, ManageCreateCompositeComponent};\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":95,"column":6,"nodeType":"217","endLine":95,"endColumn":27,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":26,"column":10,"nodeType":"221","messageId":"222","endLine":26,"endColumn":20},{"ruleId":"219","severity":1,"message":"223","line":26,"column":22,"nodeType":"221","messageId":"222","endLine":26,"endColumn":35},{"ruleId":"219","severity":1,"message":"224","line":27,"column":17,"nodeType":"221","messageId":"222","endLine":27,"endColumn":25},{"ruleId":"215","severity":1,"message":"225","line":205,"column":6,"nodeType":"217","endLine":205,"endColumn":10,"suggestions":"226"},{"ruleId":"215","severity":1,"message":"227","line":211,"column":6,"nodeType":"217","endLine":211,"endColumn":19,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":14,"column":10,"nodeType":"221","messageId":"222","endLine":14,"endColumn":19},{"ruleId":"219","severity":1,"message":"230","line":4,"column":22,"nodeType":"221","messageId":"222","endLine":4,"endColumn":30},{"ruleId":"231","severity":1,"message":"232","line":282,"column":1,"nodeType":"233","endLine":290,"endColumn":3},{"ruleId":"215","severity":1,"message":"234","line":112,"column":6,"nodeType":"217","endLine":112,"endColumn":14,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":166,"column":17,"nodeType":"238","messageId":"239","endLine":173,"endColumn":19},{"ruleId":"219","severity":1,"message":"240","line":14,"column":10,"nodeType":"221","messageId":"222","endLine":14,"endColumn":15},{"ruleId":"219","severity":1,"message":"241","line":14,"column":17,"nodeType":"221","messageId":"222","endLine":14,"endColumn":27},{"ruleId":"219","severity":1,"message":"242","line":74,"column":7,"nodeType":"221","messageId":"222","endLine":74,"endColumn":15},{"ruleId":"215","severity":1,"message":"243","line":110,"column":16,"nodeType":"244","endLine":110,"endColumn":59},{"ruleId":"215","severity":1,"message":"245","line":121,"column":6,"nodeType":"217","endLine":121,"endColumn":60,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":96,"column":20,"nodeType":"249","messageId":"250","endLine":96,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":161,"column":20,"nodeType":"249","messageId":"250","endLine":161,"endColumn":22},{"ruleId":"251","severity":1,"message":"252","line":166,"column":52,"nodeType":"253","messageId":"254","endLine":166,"endColumn":54},{"ruleId":"219","severity":1,"message":"255","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"256","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":27},{"ruleId":"219","severity":1,"message":"257","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":18},{"ruleId":"219","severity":1,"message":"258","line":9,"column":10,"nodeType":"221","messageId":"222","endLine":9,"endColumn":22},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["261"],"no-unused-vars","'composite2' is assigned a value but never used.","Identifier","unusedVar","'setComposite2' is assigned a value but never used.","'setListT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["263"],"'TextField' is defined but never used.","'useTheme' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'nodesDos' is assigned a value but never used.","Assignments to the 'edgesDos' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'calculateTotal'. Either include it or remove the dependency array.",["265"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'ModalMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [user, reloadSidebar, get]",{"range":"276","text":"277"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"278","text":"279"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"280","text":"281"},"Update the dependencies array to be: [loader, onClose]",{"range":"282","text":"283"},"Update the dependencies array to be: [calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",{"range":"284","text":"285"},[2223,2244],"[user, reloadSidebar, get]",[5203,5207],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[5279,5292],"[checked, cy, setEdgesLabel]",[3178,3186],"[loader, onClose]",[3813,3867],"[calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]"]