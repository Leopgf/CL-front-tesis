[{"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\App.js":"1","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Navbar\\Navbar.js":"2","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\architecture\\architecture.js":"3","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\projects\\projects.js":"4","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\DeleteMessage\\DeleteMessage.js":"5","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\EditMessage\\EditMessage.js":"6","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\versions\\versions.js":"7","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarItem\\SidebarItem.js":"8","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarDetail\\SidebarDetail.js":"9","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\projects\\projects.js":"10","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\config\\settings\\settings.js":"11","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\versions\\versions.js":"12","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\screens\\Home\\Home.js":"13","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\LoginButton\\LoginButton.js":"14","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\elements\\elements.js":"15","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Content\\Content.js":"16","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\architecture\\architecture.js":"17","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SelectMessage\\SelectMessage.js":"18","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\styles\\Global.js":"19","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\FileReader\\FileReader.js":"20","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\elements\\elements.js":"21","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\index.js":"22","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\auth\\context\\context.js":"23","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Table\\Table.js":"24","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Loader\\Loader.js":"25","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\ModalMessage\\ModalMessage.js":"26","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\firebase\\googleAuth.js":"27","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SideBar\\Sidebar.js":"28","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarHeader\\SidebarHeader.js":"29","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\login\\login.js":"30","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarFooter\\SidebarFooter.js":"31","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\TableItem.js":"32","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\Nodes\\Nodes.js":"33","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\Edges\\Edges.js":"34"},{"size":1231,"mtime":1616070166378,"results":"35","hashOfConfig":"36"},{"size":5288,"mtime":1616600500515,"results":"37","hashOfConfig":"36"},{"size":4676,"mtime":1616355048586,"results":"38","hashOfConfig":"36"},{"size":2261,"mtime":1618848332357,"results":"39","hashOfConfig":"36"},{"size":729,"mtime":1616356440112,"results":"40","hashOfConfig":"36"},{"size":672,"mtime":1616356440120,"results":"41","hashOfConfig":"36"},{"size":5241,"mtime":1616600219117,"results":"42","hashOfConfig":"36"},{"size":5595,"mtime":1618848332376,"results":"43","hashOfConfig":"36"},{"size":3839,"mtime":1616599536791,"results":"44","hashOfConfig":"36"},{"size":3857,"mtime":1616599875706,"results":"45","hashOfConfig":"36"},{"size":347,"mtime":1616378422617,"results":"46","hashOfConfig":"36"},{"size":2592,"mtime":1618848332364,"results":"47","hashOfConfig":"36"},{"size":3512,"mtime":1619570980821,"results":"48","hashOfConfig":"36"},{"size":1751,"mtime":1616070166513,"results":"49","hashOfConfig":"36"},{"size":568,"mtime":1618848332350,"results":"50","hashOfConfig":"36"},{"size":2766,"mtime":1616377647812,"results":"51","hashOfConfig":"36"},{"size":2265,"mtime":1618848332342,"results":"52","hashOfConfig":"36"},{"size":648,"mtime":1616355022875,"results":"53","hashOfConfig":"36"},{"size":251,"mtime":1615649219896,"results":"54","hashOfConfig":"36"},{"size":6981,"mtime":1618848332370,"results":"55","hashOfConfig":"36"},{"size":3046,"mtime":1616600149437,"results":"56","hashOfConfig":"36"},{"size":877,"mtime":1619055716866,"results":"57","hashOfConfig":"36"},{"size":101,"mtime":1616070166448,"results":"58","hashOfConfig":"36"},{"size":2576,"mtime":1619571315264,"results":"59","hashOfConfig":"36"},{"size":265,"mtime":1616070166506,"results":"60","hashOfConfig":"36"},{"size":354,"mtime":1619534328755,"results":"61","hashOfConfig":"36"},{"size":651,"mtime":1616070166608,"results":"62","hashOfConfig":"36"},{"size":3490,"mtime":1616070166548,"results":"63","hashOfConfig":"36"},{"size":2291,"mtime":1616070166572,"results":"64","hashOfConfig":"36"},{"size":1065,"mtime":1616070166413,"results":"65","hashOfConfig":"36"},{"size":1037,"mtime":1616070166568,"results":"66","hashOfConfig":"36"},{"size":2565,"mtime":1619571373952,"results":"67","hashOfConfig":"36"},{"size":732,"mtime":1619571224257,"results":"68","hashOfConfig":"36"},{"size":1031,"mtime":1619571548532,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ry7ltc",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\App.js",[],["148","149"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Navbar\\Navbar.js",["150"],"import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  manageCreateVersion,\r\n  manageDeleteVersion,\r\n  manageEditVersion,\r\n} from \"../../helpers/versions/versions\";\r\n\r\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AppContext from \"../../auth/context/context\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Modal from \"../FileReader/FileReader\";\r\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\n/**\r\n * Componente que representa la barra\r\n * superior de navegacion\r\n */\r\nconst Navbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const {\r\n    user,\r\n    selectedProject,\r\n    setSelectedProject,\r\n    setReloadSidebar,\r\n  } = useContext(AppContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {selectedProject ? (\r\n            <>\r\n              <div className={classes.title}>\r\n                <h1\r\n                  className={classes.h1}\r\n                  style={{ marginLeft: 0, minWidth: 145 }}\r\n                >\r\n                  {selectedProject.versionName}\r\n                </h1>\r\n                <IconButton\r\n                  aria-label=\"open edit\"\r\n                  className={classes.icon}\r\n                  onClick={() =>\r\n                    manageEditVersion(\r\n                      user,\r\n                      selectedProject,\r\n                      setSelectedProject,\r\n                      setReloadSidebar\r\n                    )\r\n                  }\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {selectedProject.versions > 1 ? (\r\n                  <IconButton\r\n                    aria-label=\"open delete\"\r\n                    className={classes.icon}\r\n                    onClick={() =>\r\n                      manageDeleteVersion(\r\n                        user,\r\n                        selectedProject,\r\n                        setSelectedProject,\r\n                        setReloadSidebar\r\n                      )\r\n                    }\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                ) : null}\r\n              </div>\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <NavbarItem\r\n                  icon={<CreateIcon />}\r\n                  title={\"Crear nueva versión\"}\r\n                  onClick={() =>\r\n                    manageCreateVersion(user, selectedProject, setReloadSidebar)\r\n                  }\r\n                />\r\n                <NavbarItem\r\n                  icon={<AddIcon />}\r\n                  title={\"Agregar elementos\"}\r\n                  onClick={() => setShowModal(true)}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {showModal ? (\r\n        <Modal\r\n          open={showModal}\r\n          onClose={() => setShowModal(false)}\r\n          projectIndex={selectedProject.projectIndex}\r\n          type={\"Elementos\"}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: \"var(--background)\",\r\n  },\r\n\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    minWidth: 200,\r\n    flexShrink: 0,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n  },\r\n\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"nowrap\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  h1: {\r\n    color: \"var(--background)\",\r\n    margin: \"auto\",\r\n    fontFamily: \"var(font-family-content)\",\r\n    display: \"inline\",\r\n    paddingRight: 16,\r\n  },\r\n\r\n  icon: {\r\n    color: \"var(--background)\",\r\n    paddingRight: 0,\r\n    paddingLeft: 5,\r\n  },\r\n}));\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\architecture\\architecture.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\projects\\projects.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\DeleteMessage\\DeleteMessage.js",[],["151","152"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\EditMessage\\EditMessage.js",[],["153","154"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\versions\\versions.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarItem\\SidebarItem.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\projects\\projects.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\config\\settings\\settings.js",[],["155","156"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\versions\\versions.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\screens\\Home\\Home.js",["157"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\LoginButton\\LoginButton.js",[],["158","159"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\elements\\elements.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Content\\Content.js",["160"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n/**\r\n * Componente que representa el contenido\r\n * de la arquitectura seleccionada\r\n */\r\nconst Content = () => {\r\n  const [elementos, setElementos] = useState();\r\n  const { selectedProject } = useContext(AppContext);\r\n  const [load, setLoad] = useState(false);\r\n  let cyto;\r\n\r\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\r\n  var state = {\r\n    layout: {\r\n      name: \"random\",\r\n      fit: true,\r\n      padding: 20,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 10,\r\n    },\r\n    stylesheet: [\r\n      {\r\n        selector: \"node\",\r\n        style: {\r\n          content: \"data(id)\",\r\n          width: 6,\r\n          height: 6,\r\n\r\n          \"background-color\": \"#a65ba6\",\r\n        },\r\n      },\r\n      {\r\n        selector: \"edge\",\r\n        style: {\r\n          width: 3,\r\n          content: \"data(id)\",\r\n          \"curve-style\": \"bezier\",\r\n          \"target-arrow-shape\": \"triangle\",\r\n          \"line-color\": \"#ddd\",\r\n          \"target-arrow-color\": \"#18202C\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  /**\r\n   * Crear referencia al elemento de Cytoscape y\r\n   * actuar el tamaño viewport del grafo\r\n   * @param {CytoscapeComponent} cy referencia al componente\r\n   */\r\n  function getCy(cy) {\r\n    cyto = cy;\r\n    cyto.resize();\r\n    cyto.on(\"select\", \"node\", selectedNodeHandler);\r\n    //cyto.style().selector(\"node\").style(\"background-color\", \"magenta\").update(); // indicate the end of your new stylesheet so that it can be updated on elements\r\n  }\r\n\r\n  /**\r\n   * Manejador de evento al seleccionar nodo\r\n   * @param {Event} event referencia al componente\r\n   */\r\n  const selectedNodeHandler = (event) => {\r\n    //console.log(evt.data); // 'bar'\r\n    let target = event;\r\n    //console.log(\"select \", target);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    setElementos(selectedProject.elements);\r\n  }, [selectedProject]);\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      setLoad(false);\r\n    }\r\n  }, [elementos, load]);\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <Loader />\r\n      ) : elementos ? (\r\n        <CytoscapeComponent\r\n          id=\"component\"\r\n          zoom={1}\r\n          maxZoom={2}\r\n          elements={CytoscapeComponent.normalizeElements(elementos)}\r\n          className=\"component\"\r\n          layout={state.layout}\r\n          stylesheet={state.stylesheet}\r\n          pan={{ x: 150, y: 30 }}\r\n          cy={(cy) => {\r\n            getCy(cy);\r\n          }}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\architecture\\architecture.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SelectMessage\\SelectMessage.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\styles\\Global.js",[],["161","162"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\FileReader\\FileReader.js",["163","164","165"],"import React, { useContext, useState } from \"react\";\r\nimport \"./FileReader.css\";\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\nimport { submitArchitecture } from \"../../helpers/architecture/architecture\";\r\nimport { manageElementsSubmit } from \"../../helpers/elements/elements\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { manageErrors } from \"../../helpers/errors/errors\";\r\n\r\n/**\r\n * Componente que representa pop-up\r\n * para añadir archivos\r\n */\r\nconst FileReader = ({ onClose, open, projectIndex, type }) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(\"\");\r\n  const [valid, setValid] = useState(true);\r\n  const [loader, setLoader] = useState(false);\r\n  const {\r\n    user,\r\n    setReloadSidebar,\r\n    selectedProject,\r\n    setSelectedProject,\r\n  } = useContext(AppContext);\r\n  var messages = {\r\n    error: \"\",\r\n    success: \"\",\r\n  };\r\n\r\n  const handleChangeStatus = ({ meta }, status) => {\r\n    //console.log(status, meta)\r\n  };\r\n\r\n  /**\r\n   * Manejar acción en base al tipo de data a subir a\r\n   * la base de datos\r\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n   */\r\n  const handleSubmit = async (allFiles) => {\r\n    var response;\r\n    setLoader(true);\r\n    switch (type.toLowerCase()) {\r\n      case \"arquitectura\":\r\n        if (name !== \"\") {\r\n          setLoader(true);\r\n          response = await manageArchitectureSubmit(allFiles);\r\n          manageResponse(response);\r\n          break;\r\n        } else {\r\n          setValid(false);\r\n          break;\r\n        }\r\n      case \"elementos\":\r\n        setLoader(true);\r\n        manageElementsSubmit(\r\n          user,\r\n          allFiles,\r\n          selectedProject,\r\n          setSelectedProject,\r\n          setReloadSidebar\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manejar los modals a mostrar en base a\r\n   * la respuesta obtenida de la API\r\n   * @param {JSON} response respuesta de la llamada a la API\r\n   */\r\n  const manageResponse = (response) => {\r\n    setReloadSidebar(false);\r\n    if (Number.isInteger(response)) {\r\n      manageErrors(response)\r\n    } else {\r\n      ModalMessage(\"¡Arquitectura creada!\", \" \", \"success\", false, 4000);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Llamada a la API para agregar una nueva arquitectura\r\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n   * @returns JSON de la respuesta de la API\r\n   */\r\n  const manageArchitectureSubmit = async (allFiles) => {\r\n    const response = await submitArchitecture(\r\n      allFiles,\r\n      user,\r\n      name,\r\n      projectIndex,\r\n      setReloadSidebar\r\n    );\r\n    messages = {\r\n      success: \"Se ha creado una nueva arquitectura\",\r\n      error: \"No se ha podido crear una nueva arquitectura\",\r\n    };\r\n    return response;\r\n  };\r\n\r\n  /**\r\n   * Actualizar el nombre según se actualice el TextField\r\n   * @param {Event} event objeto de tipo evento\r\n   */\r\n  const handleChange = (event) => {\r\n    setValid(true);\r\n    setName(event.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (loader) {\r\n      setTimeout(setLoader(false), 5000);\r\n      onClose();\r\n    }\r\n  }, [loader]);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={onClose}\r\n      >\r\n        <div className={classes.paper}>\r\n          {loader ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <div>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onClose}\r\n                  className={classes.onClose}\r\n                  edge=\"start\"\r\n                >\r\n                  <HighlightOffIcon />\r\n                </IconButton>\r\n                <h2 className={classes.h1}>Agregar {type}</h2>\r\n              </div>\r\n\r\n              {type.toLowerCase() === \"arquitectura\" ? (\r\n                <>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-basic\"\r\n                    label=\"Nombre\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  {!valid ? (\r\n                    <div className={classes.validacion}>\r\n                      * El nombre de la arquitectura es obligatorio{\" \"}\r\n                    </div>\r\n                  ) : null}\r\n                </>\r\n              ) : null}\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                onSubmit={handleSubmit}\r\n                styles={{ dropzone: { maxHeight: 200, maxWidth: 400 } }}\r\n                accept=\"text/xml\"\r\n                inputContent={(files, extra) =>\r\n                  extra.reject\r\n                    ? \"Solo cargar archivos .xml\"\r\n                    : \"Agrega archivos o hacer clic para buscar\"\r\n                }\r\n                styles={{\r\n                  dropzoneReject: {\r\n                    borderColor: \"red\",\r\n                    backgroundColor: \"#DAA\",\r\n                  },\r\n                  inputLabel: (files, extra) =>\r\n                    extra.reject ? { color: \"red\" } : {},\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    top: \"24%\",\r\n    left: \"23%\",\r\n    width: \"60%\",\r\n    minHeight: 300,\r\n    maxHeight: 600,\r\n    overflow: \"auto\",\r\n    border: \"none\",\r\n    borderRadius: 8,\r\n    background: \"var(--background)\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: \"1.25rem\",\r\n    outline: \"none\",\r\n    animationDuration: \"0.3s\",\r\n    animationTimingFunction: \"ease\",\r\n    animationDelay: \"0s\",\r\n    animationIterationCount: 1,\r\n    animationDirection: \"normal\",\r\n    animationFillMode: \"none\",\r\n    animationPlayState: \"running\",\r\n  },\r\n  h1: {\r\n    color: \"var(--primaryDark)\",\r\n    margin: \"auto\",\r\n    marginBottom: 35,\r\n    fontSize: \"1.875rem\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"var(font-family-content)\",\r\n  },\r\n  validacion: {\r\n    color: \"var(--error)\",\r\n    fontSize: 13,\r\n    margin: 5,\r\n  },\r\n  onClose: {\r\n    position: \"relative\",\r\n    left: \"98%\",\r\n    top: \"-9px\",\r\n    backgroundColor: \"var(primaryDark)\",\r\n    paddingTop: 0,\r\n    paddingRight: 0,\r\n    paddingBottom: 0,\r\n  },\r\n}));\r\n\r\nexport default FileReader;\r\n","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\helpers\\elements\\elements.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\index.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\auth\\context\\context.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Table\\Table.js",["166","167"],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\ModalMessage\\ModalMessage.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\firebase\\googleAuth.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SideBar\\Sidebar.js",["168"],"import React, { useContext, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Drawer, List } from \"@material-ui/core\";\r\n\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport LoginButton from \"../LoginButton/LoginButton\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport SidebarHeader from \"../SidebarHeader/SidebarHeader\";\r\nimport SidebarFooter from \"../SidebarFooter/SidebarFooter\";\r\nimport SidebarItem from \"../SidebarItem/SidebarItem\";\r\n\r\n/**\r\n * Componente que representa la barra lateral\r\n * princial de navegacion\r\n */\r\nconst Sidebar = ({ loader, login, logout, items, open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const { user } = useContext(AppContext);\r\n\r\n  /**\r\n   * Barra lateral con proyectos segun usuario\r\n   * @param {Array} items almacena el arreglo de proyecto correspondiente al usuario\r\n   * @returns {JSX} estructura de elementos en la barra lateral\r\n   */\r\n  const Logged = (items) => {\r\n    if (Array.isArray(items)) {\r\n      return (\r\n        <>\r\n          <SidebarHeader setOpen={setOpen} />\r\n          <List className=\"list\">\r\n            {items.map((item, index) => {\r\n              return (\r\n                <SidebarItem\r\n                  key={item.name}\r\n                  item={item}\r\n                  projectIndex={index}\r\n                />\r\n              );\r\n            })}\r\n          </List>\r\n          <SidebarFooter logout={logout} />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <SidebarHeader setOpen={setOpen} />\r\n          <h1 className={classes.h1}>No tienes proyectos actualmente</h1>\r\n          <SidebarFooter logout={logout} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Barra lateral con contenido para iniciar sesion\r\n   * @returns {JSX} estructura de elementos en la barra lateral\r\n   */\r\n  const unLogged = () => {\r\n    return (\r\n      <div className={classes.title}>\r\n        <h1>Iniciar sesión</h1>\r\n        <LoginButton login={login} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Navbar open={open} setOpen={setOpen} />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {loader ? <Loader /> : user ? Logged(items) : unLogged()}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    minWidth: 200,\r\n    flexShrink: 0,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    zIndex: 0,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)\",\r\n  },\r\n  title: {\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    width: \"95%\",\r\n    color: \"var(--background)\",\r\n    letterSpacing: 1,\r\n    fontFamily: \"var(--font-family-headline)\",\r\n  },\r\n  h1: {\r\n    color: \"var(--background)\",\r\n    margin: \"auto\",\r\n    textAlign: \"center\",\r\n    width: 200,\r\n    fontFamily: \"var(font-family-content)\",\r\n  },\r\n}));\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\api\\login\\login.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\TableItem.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\Nodes\\Nodes.js",[],"C:\\Users\\Mari\\Desktop\\Tesis\\tesis-frontend\\src\\components\\TableItem\\Edges\\Edges.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":29,"column":9,"nodeType":"175","messageId":"176","endLine":29,"endColumn":14},{"ruleId":"169","replacedBy":"177"},{"ruleId":"171","replacedBy":"178"},{"ruleId":"169","replacedBy":"179"},{"ruleId":"171","replacedBy":"180"},{"ruleId":"169","replacedBy":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":95,"column":6,"nodeType":"185","endLine":95,"endColumn":27,"suggestions":"186"},{"ruleId":"169","replacedBy":"187"},{"ruleId":"171","replacedBy":"188"},{"ruleId":"173","severity":1,"message":"189","line":71,"column":9,"nodeType":"175","messageId":"176","endLine":71,"endColumn":15},{"ruleId":"169","replacedBy":"190"},{"ruleId":"171","replacedBy":"191"},{"ruleId":"173","severity":1,"message":"192","line":104,"column":5,"nodeType":"175","messageId":"176","endLine":104,"endColumn":13},{"ruleId":"183","severity":1,"message":"193","line":125,"column":6,"nodeType":"185","endLine":125,"endColumn":14,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":180,"column":17,"nodeType":"197","endLine":187,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":14,"column":9,"nodeType":"175","messageId":"176","endLine":14,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":69,"column":5,"nodeType":"200","messageId":"201","endLine":69,"endColumn":16},{"ruleId":"173","severity":1,"message":"202","line":1,"column":29,"nodeType":"175","messageId":"176","endLine":1,"endColumn":37},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar",["203"],["204"],["203"],["204"],["203"],["204"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'get' and 'selectedProject'. Either include them or remove the dependency array.","ArrayExpression",["205"],["203"],["204"],"'target' is assigned a value but never used.",["203"],["204"],"'messages' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["206"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [user, reloadSidebar, selectedProject, get]",{"range":"211","text":"212"},"Update the dependencies array to be: [loader, onClose]",{"range":"213","text":"214"},[2336,2357],"[user, reloadSidebar, selectedProject, get]",[3592,3600],"[loader, onClose]"]