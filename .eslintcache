[{"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\index.js":"1","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\reportWebVitals.js":"2","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\App.js":"3","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\firebase-config.js":"4","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\config\\settings\\settings.js":"5","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\styles\\Global.js":"6","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\auth\\context\\context.js":"7","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\UML\\UML.js":"8","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\screens\\Home\\Home.js":"9","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\googleAuth.js":"10","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Content\\Content.js":"11","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Table\\Table.js":"12","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\login.js":"13","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SideBar\\Sidebar.js":"14","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Loader\\Loader.js":"15","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\TableItem.js":"16","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\LoginButton\\LoginButton.js":"17","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarFooter\\SidebarFooter.js":"18","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarHeader\\SidebarHeader.js":"19","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarItem\\SidebarItem.js":"20","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Navbar\\Navbar.js":"21","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\nodes\\nodes.js":"22","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\FileReader\\FileReader.js":"23","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\NavbarItem\\NavbarItem.js":"24","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Excel\\ExcelDownloader.js":"25","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\errors\\errors.js":"26","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\elements\\elements.js":"27","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\ModalMessage\\ModalMessage.js":"28","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\architecture\\architecture.js":"29","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SelectMessage\\SelectMessage.js":"30","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\EditMessage\\EditMessage.js":"31","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\DeleteMessage\\DeleteMessage.js":"32","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\architecture\\architecture.js":"33","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\elements\\elements.js":"34","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\content\\downloader.js":"35","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarDetail\\SidebarDetail.js":"36","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\versions\\versions.js":"37","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\versions\\versions.js":"38","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\projects\\projects.js":"39","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Menu\\Menu.js":"40","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Nodes\\Nodes.js":"41","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Edges\\Edges.js":"42","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\projects\\projects.js":"43","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js":"44","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\metrics\\metrics.js":"45","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\metrics\\metrics.js":"46","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\ComponentDiagram\\ComponentDiagram.js":"47","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\Variability\\Variability.js":"48"},{"size":877,"mtime":1682557840610,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1682557840611,"results":"51","hashOfConfig":"50"},{"size":2801,"mtime":1682557840580,"results":"52","hashOfConfig":"50"},{"size":817,"mtime":1682557840605,"results":"53","hashOfConfig":"50"},{"size":414,"mtime":1682557840604,"results":"54","hashOfConfig":"50"},{"size":251,"mtime":1682557840632,"results":"55","hashOfConfig":"50"},{"size":101,"mtime":1682557840584,"results":"56","hashOfConfig":"50"},{"size":3672,"mtime":1682557840603,"results":"57","hashOfConfig":"50"},{"size":4272,"mtime":1688425303654,"results":"58","hashOfConfig":"50"},{"size":651,"mtime":1682557840605,"results":"59","hashOfConfig":"50"},{"size":7921,"mtime":1682557840585,"results":"60","hashOfConfig":"50"},{"size":3701,"mtime":1682557840600,"results":"61","hashOfConfig":"50"},{"size":1083,"mtime":1682557840582,"results":"62","hashOfConfig":"50"},{"size":3574,"mtime":1682557840596,"results":"63","hashOfConfig":"50"},{"size":265,"mtime":1682557840588,"results":"64","hashOfConfig":"50"},{"size":3658,"mtime":1682557840603,"results":"65","hashOfConfig":"50"},{"size":1758,"mtime":1682557840590,"results":"66","hashOfConfig":"50"},{"size":1037,"mtime":1682557840598,"results":"67","hashOfConfig":"50"},{"size":2289,"mtime":1682557840598,"results":"68","hashOfConfig":"50"},{"size":2261,"mtime":1682557840599,"results":"69","hashOfConfig":"50"},{"size":8446,"mtime":1682557840594,"results":"70","hashOfConfig":"50"},{"size":8681,"mtime":1682557840608,"results":"71","hashOfConfig":"50"},{"size":8363,"mtime":1688425303646,"results":"72","hashOfConfig":"50"},{"size":1078,"mtime":1682557840595,"results":"73","hashOfConfig":"50"},{"size":2200,"mtime":1682557840587,"results":"74","hashOfConfig":"50"},{"size":1224,"mtime":1682557840607,"results":"75","hashOfConfig":"50"},{"size":4329,"mtime":1682557840607,"results":"76","hashOfConfig":"50"},{"size":354,"mtime":1682557840593,"results":"77","hashOfConfig":"50"},{"size":4505,"mtime":1682557840606,"results":"78","hashOfConfig":"50"},{"size":648,"mtime":1682557840595,"results":"79","hashOfConfig":"50"},{"size":672,"mtime":1682557840586,"results":"80","hashOfConfig":"50"},{"size":729,"mtime":1682557840586,"results":"81","hashOfConfig":"50"},{"size":2265,"mtime":1682557840581,"results":"82","hashOfConfig":"50"},{"size":4058,"mtime":1696864743115,"results":"83","hashOfConfig":"50"},{"size":543,"mtime":1682557840606,"results":"84","hashOfConfig":"50"},{"size":5014,"mtime":1688425303648,"results":"85","hashOfConfig":"50"},{"size":4947,"mtime":1682557840610,"results":"86","hashOfConfig":"50"},{"size":2592,"mtime":1682557840582,"results":"87","hashOfConfig":"50"},{"size":3551,"mtime":1682557840609,"results":"88","hashOfConfig":"50"},{"size":5274,"mtime":1696861791150,"results":"89","hashOfConfig":"50"},{"size":10034,"mtime":1696884938748,"results":"90","hashOfConfig":"50"},{"size":9630,"mtime":1682557840601,"results":"91","hashOfConfig":"50"},{"size":2302,"mtime":1682557840583,"results":"92","hashOfConfig":"50"},{"size":9128,"mtime":1696872465740,"results":"93","hashOfConfig":"50"},{"size":1363,"mtime":1682557840608,"results":"94","hashOfConfig":"50"},{"size":2935,"mtime":1682557840583,"results":"95","hashOfConfig":"50"},{"size":470,"mtime":1694788892261,"results":"96","hashOfConfig":"50"},{"size":459,"mtime":1696765967425,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"5adw5a",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\index.js",[],["205","206"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\reportWebVitals.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\App.js",["207"],"import React, { useEffect, useState } from \"react\";\r\nimport { GlobalStyle } from \"./styles/Global\";\r\nimport \"./App.css\";\r\nimport \"./styles/Theme/variables.css\";\r\nimport { registerLicense } from '@syncfusion/ej2-base';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./screens/Home/Home\";\r\nimport Vista from './components/UML/UML';\r\n\r\nimport AppContext from \"./auth/context/context\";\r\n\r\n/** Componente que contiene todas las rutas\r\n *  de navegación en la aplicación\r\n */\r\nfunction App() {\r\n  const [user, setUser] = useState();\r\n  const [selectedProject, setSelectedProject] = useState();\r\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\r\n  const [selectionModel, setSelectionModel] = useState([]);\r\n  const [reloadSidebar, setReloadSidebar] = useState(false);\r\n  const [cy, setCy] = useState();\r\n  const [composite, setComposite] = useState(false);\r\n  /**\r\n   * Restaurar usuario si ya se ha iniciado sesión\r\n   */\r\n  const restoreUser = () => {\r\n    const tempUser = localStorage.getItem(\"user\");\r\n    if (tempUser) setUser(JSON.parse(tempUser));\r\n  };\r\n\r\n  registerLicense(\r\n    'Mgo+DSMBaFt/QHRqVVhlXFpHaV1CQmFJfFBmRGlYeVRyfUUmHVdTRHRcQl9iQX9QdEVnW3pZc3M=;Mgo+DSMBPh8sVXJ0S0J+XE9BdlRBQmFJYVF2R2BJflRxcl9EaUwxOX1dQl9gSXxSfkRgW39acnFdQmc=;ORg4AjUWIQA/Gnt2VVhkQlFac19JXnxLfkx0RWFab196dVNMYlVBJAtUQF1hSn5Rd01iWn1edHZQT2hb;MTE1NjQ3NUAzMjMwMmUzNDJlMzBpaC9nOE4vait1ejFGS09EelUwaHpjL3lvazNWOG5ZcUd6SDdJR3FHRkEwPQ==;MTE1NjQ3NkAzMjMwMmUzNDJlMzBtbVV4Z3o0K0IvSm9nSE5FTTZOWEtUdUdSQXRMM3pBd25wWW1ibkp0U2tnPQ==;NRAiBiAaIQQuGjN/V0Z+WE9EaFpCVmBWfFNpR2NbfE5xflRAal5YVBYiSV9jS31TdERrWHxccHBXQGRVWA==;MTE1NjQ3OEAzMjMwMmUzNDJlMzBBQjRscmZGT2xoZTU1V0JGc3o5OFc3UUFrR1NVNkVsbC92OWNoQk41MG9zPQ==;MTE1NjQ3OUAzMjMwMmUzNDJlMzBLOHlvWmozck9WWWEvUDd4WnJMRWIybDZZMmVIcEs1SjJiM0NRMmRFMGNjPQ==;Mgo+DSMBMAY9C3t2VVhkQlFac19JXnxLfkx0RWFab196dVNMYlVBJAtUQF1hSn5Rd01iWn1edHZTT2lV;MTE1NjQ4MUAzMjMwMmUzNDJlMzBXRlJybnVrQ0VKSXMydnJKT3dOYW9Ca2NWc3ROSEdKa1A4OVlsVUxFVmw0PQ==;MTE1NjQ4MkAzMjMwMmUzNDJlMzBDanhUWnQxcDZITHZsNVBSOWNjNmFnQTJ4UEFyU1g0UFkwNENWa0dldDZvPQ==;MTE1NjQ4M0AzMjMwMmUzNDJlMzBBQjRscmZGT2xoZTU1V0JGc3o5OFc3UUFrR1NVNkVsbC92OWNoQk41MG9zPQ=='\r\n  );\r\n\r\n  useEffect(() => {\r\n    restoreUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <AppContext.Provider value={{\r\n          user, setUser,\r\n          selectedProject, setSelectedProject,\r\n          selectedNodes, setSelectedNodes,\r\n          reloadSidebar, setReloadSidebar,\r\n          selectionModel, setSelectionModel,\r\n          cy, setCy,\r\n          composite, setComposite,\r\n        }}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\firebase-config.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\config\\settings\\settings.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\styles\\Global.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\auth\\context\\context.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\UML\\UML.js",["208","209","210","211","212","213","214","215","216","217","218"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { DiagramComponent } from '@syncfusion/ej2-react-diagrams';\r\nimport AppContext from '../../auth/context/context';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction UML({ setShowUml }) {\r\n  const { selectedProject } = useContext(AppContext);\r\n  const [nodes, setNodes] = useState([]);\r\n  const [connectors, setConnectors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    renderNodesUML();\r\n    renderConnectorUML();\r\n  }, []);\r\n\r\n  useEffect(() => {}, [nodes]);\r\n\r\n  const renderNodesUML = () => {\r\n    let nodos = [];\r\n    selectedProject.elements.list_t.map((node) => {\r\n      let members = [];\r\n      node.composite_component.map((component) => {\r\n        let member = {\r\n          name: component,\r\n        };\r\n        members.push(member);\r\n      });\r\n      let object = {\r\n        id: node.name,\r\n        shape: {\r\n          type: 'UmlClassifier',\r\n          enumerationShape: {\r\n            name: node.name,\r\n            members: members,\r\n          },\r\n          classifier: 'Enumeration',\r\n        },\r\n        offsetX: node.offsetX,\r\n        offsetY: node.offsetY,\r\n      };\r\n      nodos.push(object);\r\n    });\r\n    setNodes(nodos);\r\n  };\r\n\r\n  const renderConnectorUML = () => {\r\n    let conectores = [];\r\n    const nodesStatic = selectedProject.elements.list_t;\r\n    selectedProject.elements.list_t.map((node) => {\r\n      console.log('NODOSSS');\r\n      console.log(node);\r\n      node.provided_interfaces?.map((provided) => {\r\n        nodesStatic.map((nodos) => {\r\n          nodos.required_interfaces?.map((required) => {\r\n            console.log('REQUIRED');\r\n            console.log(required);\r\n            console.log(provided);\r\n            if (required == provided) {\r\n              let exist = false;\r\n              conectores?.map((connect) => {\r\n                if (\r\n                  connect.sourcePoint.x == node.offsetX &&\r\n                  connect.targetPoint.x == nodos.offsetX\r\n                ) {\r\n                  exist = true;\r\n                }\r\n              });\r\n              if (!exist) {\r\n                console.log('PASO?');\r\n                console.log(node.offsetX, node.offsetY);\r\n                console.log(nodos.offsetX, nodos.offsetY);\r\n                let object = {\r\n                  id: 'connector' + conectores.length,\r\n                  //Define connector start and end points\r\n                  sourcePoint: { x: node.offsetX, y: node.offsetY },\r\n                  targetPoint: { x: nodos.offsetX, y: nodos.offsetY },\r\n                  type: 'Straight',\r\n                  shape: {\r\n                    type: 'UmlClassifier',\r\n                    //Set an relationship for connector\r\n                    relationship: 'Inheritance',\r\n                  },\r\n                };\r\n                conectores.push(object);\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n    console.log('CONECTORES??');\r\n    console.log(conectores);\r\n    setConnectors(conectores);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 'auto', overflow: 'scroll' }}>\r\n      {selectedProject ? (\r\n        <DiagramComponent\r\n          id=\"container\"\r\n          width={'100%'}\r\n          height={'600px'}\r\n          nodes={nodes}\r\n          connectors={connectors}\r\n        />\r\n      ) : (\r\n        Swal.fire({\r\n          text: 'Debe seleccionar una arquitectura',\r\n          icon: 'warning',\r\n          showCancelButton: false,\r\n          confirmButtonColor: 'var(--success)',\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            setShowUml(false);\r\n          }\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UML;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\screens\\Home\\Home.js",["219"],"// @ts-nocheck\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport Sidebar from \"../../components/SideBar/Sidebar\";\r\nimport Content from \"../../components/Content/Content\";\r\nimport Table from \"../../components/Table/Table\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport { googleAuth } from \"../../firebase/googleAuth\";\r\nimport { postLogin } from \"../../api/login/login\";\r\nimport UML from \"../../components/UML/UML\";\r\n\r\n/** Componente que representa la página\r\n *  principal de navegación\r\n */\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const [drawerItems, setDrawerItems] = useState();\r\n    const [open, setOpen] = useState(true);\r\n    const [load, setLoad] = useState(true);\r\n    const [showUml, setShowUml] = useState(false);\r\n    const {\r\n        user,\r\n        setUser,\r\n        reloadSidebar,\r\n        selectedProject,\r\n        setSelectedProject,\r\n    } = useContext(AppContext);\r\n\r\n    /**\r\n     * Llamar a google auth para establecer ususario\r\n     */\r\n    const login = async () => {\r\n        let drawer = await googleAuth(setUser);\r\n        setDrawerItems(drawer);\r\n        setLoad(false);\r\n    };\r\n\r\n    /**\r\n     * Mensaje de confirmación para cerrar sesión\r\n     */\r\n    const logout = () => {\r\n        Swal.fire({\r\n            text: \"¿Seguro que deseas cerrar sesión?\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"var(--success)\",\r\n            cancelButtonColor: \"var(--error)\",\r\n            confirmButtonText: \"Si, seguro\",\r\n            cancelButtonText: \"Cancelar\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                setSelectedProject();\r\n                setLoad(true);\r\n                localStorage.removeItem(\"user\");\r\n                setUser(null);\r\n                setLoad(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Cambiar estado de usuario e iniciar sesion\r\n     */\r\n    async function changeState() {\r\n        login();\r\n    }\r\n\r\n    /**\r\n     * Actualizar arreglo de proyectos\r\n     */\r\n    const getProject = async () => {\r\n        let elements = await postLogin(user, setUser);\r\n        setDrawerItems(elements);\r\n        setLoad(false);\r\n    };\r\n\r\n    /**\r\n     * Llamar a la actualizacion de proyectos\r\n     */\r\n    async function get() {\r\n        getProject();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoad(false);\r\n        if (user || reloadSidebar) {\r\n            setLoad(true);\r\n            get();\r\n        }\r\n    }, [user, reloadSidebar]);\r\n\r\n    return (\r\n        <>\r\n            <Sidebar\r\n                items={drawerItems}\r\n                login={changeState}\r\n                logout={logout}\r\n                loader={load}\r\n                open={open}\r\n                setOpen={setOpen}\r\n                setShowUml={(value) => setShowUml(value)}\r\n            />\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                {selectedProject ? (\r\n                    <div>\r\n                        {showUml ? (\r\n                            <UML setShowUml={(value) => setShowUml(value)} />\r\n                        ) : (\r\n                            <Content />\r\n                        )}\r\n                        <Table />\r\n                    </div>\r\n                ) : null}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingLeft: theme.spacing(2),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginTop: 70,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 270,\r\n    },\r\n}));\r\n\r\nexport default Home;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\firebase\\googleAuth.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Content\\Content.js",["220","221","222","223","224"],"// @ts-nocheck\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\n// import cytoscape from 'cytoscape';\r\n// import cise from 'cytoscape-cise';\r\nimport Loader from \"../Loader/Loader\";\r\nimport nodesHelper from \"../../helpers/nodes/nodes\";\r\n\r\n/**\r\n * Componente que representa el contenido\r\n * de la arquitectura seleccionada\r\n */\r\nconst Content = () => {\r\n  // cytoscape.use( cise );\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [elementos, setElementos] = useState();\r\n  const [load, setLoad] = useState(false);\r\n  const [composite2, setComposite2] = useState(false);\r\n  const [listT, setListT] = useState({nodes: ''});\r\n  const {\r\n    selectedProject,\r\n    cy, setCy,\r\n    selectedNodes, setSelectedNodes,\r\n    setSelectionModel,\r\n    composite\r\n  } = useContext(AppContext);\r\n\r\n    /**\r\n   * Obtener el tipo de relación\r\n   * @param {JSON} ele Objeto de cytoscape\r\n   * @returns String tipo de label\r\n   */\r\n  const getEdgeLabel = (ele) => {\r\n    if(!checked) return \"\";\r\n    switch (ele.scratch(\"relation\")) {\r\n      case \"implements\":\r\n        return \"Implementa\";\r\n      case \"extends\":\r\n        return \"Extiende\";\r\n      case \"use\":\r\n        return \"Usa\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n\r\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\r\n  var state = {\r\n    layout: {\r\n      name: 'circle',\r\n      fit: true,\r\n      padding: 30,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 150,\r\n    },\r\n    layout2: {\r\n      name: 'circle',\r\n      clusters: listT,\r\n      fit: true,\r\n      padding: 30,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 150,\r\n    },\r\n    stylesheet: [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          content: 'data(id)',\r\n          'font-size': 20,\r\n          shape: 'round-rectangle',\r\n          'text-wrap': 'wrap',\r\n          'text-max-width': 80,\r\n          'text-valign': 'center',\r\n          'text-outline-color': '#18202C',\r\n          width: 270,\r\n          color: 'white',\r\n          height: 40,\r\n          'background-color': 'data(bg)',\r\n        },\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          content: getEdgeLabel,\r\n          width: 4,\r\n          'font-size': 20,\r\n          'curve-style': 'bezier',\r\n          'edge-text-rotation': 'autorotate',\r\n          'target-arrow-shape': 'triangle-tee',\r\n          'text-valign': 'top',\r\n          'text-halign': 'center',\r\n          color: '#fff',\r\n          'text-outline-color': '#18202C',\r\n          'text-outline-width': 3,\r\n          'line-color': '#18202C',\r\n          'target-arrow-color': '#18202C',\r\n        },\r\n      },\r\n    ],\r\n    stylesheet2: [\r\n      {\r\n        selector: 'node',\r\n        style: {\r\n          content: 'data(id)',\r\n          'font-size': 20,\r\n          shape: 'round-rectangle',\r\n          'text-wrap': 'wrap',\r\n          'text-max-width': 80,\r\n          'text-valign': 'center',\r\n          width: 270,\r\n          color: 'white',\r\n          height: 40,\r\n          'background-color': 'data(bg)',\r\n        },\r\n      },\r\n      {\r\n        selector: 'edge',\r\n        style: {\r\n          content: getEdgeLabel,\r\n          width: 4,\r\n          'font-size': 20,\r\n          'curve-style': 'bezier',\r\n          'edge-text-rotation': 'autorotate',\r\n          'target-arrow-shape': 'triangle-tee',\r\n          'text-valign': 'top',\r\n          'text-halign': 'center',\r\n          color: '#fff',\r\n          'text-outline-color': '#18202C',\r\n          'text-outline-width': 3,\r\n          'line-color': '#18202C',\r\n          'target-arrow-color': '#18202C',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  /**\r\n   * Mostrar u ocultar el nombre de las\r\n   * relaciones entre los nodos\r\n   */\r\n  const setEdgesLabel = () => {\r\n    if (!checked) {\r\n      cy.style().selector(\"edge\").style({\r\n        content: \"\",\r\n      });\r\n    } else {\r\n      cy.style()\r\n        .selector(\"edge\")\r\n        .style({\r\n          content: getEdgeLabel\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const selectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    nodesHelper.addNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel\r\n    );\r\n    evt.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al dejar de seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const unselectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    const color = evt['target']['_private']['data'].bg;\r\n    nodesHelper.removeNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel,\r\n      color\r\n    );\r\n    nodesHelper.repaintEdges(selectedNodes, cy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      cy.on(\"select\", \"node\", selectNodeHandler);\r\n      cy.on(\"unselect\", \"node\", unselectNodeHandler);\r\n      setSelectionModel([]);\r\n      setSelectedNodes(new Set());\r\n    }\r\n  }, [cy]);\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      setEdgesLabel();\r\n    }\r\n  }, [checked, cy]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"ENTRO\")\r\n  //   if (composite) {\r\n  //     let composite_components = []\r\n  //     elementos.list_t.map((item) => {\r\n  //       composite_components.push(item.composite_component);\r\n  //     });\r\n  //     setListT(composite_components);\r\n  //     setComposite2(true)\r\n  //   }\r\n  // }, [composite]);\r\n\r\n  useEffect(()=>{\r\n\r\n  },[composite])\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    setElementos(selectedProject.elements);\r\n  }, [selectedProject]);\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      setLoad(false);\r\n      setChecked(false);\r\n    }\r\n  }, [elementos, load]);\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <Loader />\r\n      ) : elementos ? (\r\n        <div>\r\n          <div className={classes.onClose}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={checked}\r\n                  onChange={() => setChecked((prev) => !prev)}\r\n                />\r\n              }\r\n              labelPlacement=\"start\"\r\n              style={{ marginRight: 5 }}\r\n              label=\"\"\r\n            />\r\n          </div>\r\n\r\n          <CytoscapeComponent\r\n            className=\"component\"\r\n            cy={(cyt) => {\r\n              setCy(cyt);\r\n            }}\r\n            elements={CytoscapeComponent.normalizeElements(elementos)}\r\n            id=\"component\"\r\n            layout={state.layout}\r\n            maxZoom={2}\r\n            pan={{ x: 150, y: 30 }}\r\n            stylesheet={state.stylesheet}\r\n            zoom={0.5}\r\n          />\r\n        </div>\r\n      )\r\n      // : elementos && composite2 ? (\r\n      //   <CytoscapeComponent\r\n      //       className=\"component\"\r\n      //       cy={(cyt) => {\r\n      //         setCy(cyt);\r\n      //       }}\r\n      //       elements={CytoscapeComponent.normalizeElements(elementos)}\r\n      //       id=\"component\"\r\n      //       layout={state.layout2}\r\n      //       maxZoom={2}\r\n      //       pan={{ x: 150, y: 30 }}\r\n      //       stylesheet={state.stylesheet2}\r\n      //       zoom={0.5}\r\n      //     />\r\n      // )\r\n      : null }\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  onClose: {\r\n    position: \"absolute\",\r\n    right: \"18px\",\r\n    top: \"75px\",\r\n    zIndex: 3,\r\n  },\r\n}));\r\n\r\nexport default Content;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Table\\Table.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\login.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SideBar\\Sidebar.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Loader\\Loader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\TableItem.js",["225"],"// @ts-nocheck\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\n\r\nimport EdgesTable from \"./Edges/Edges\";\r\nimport NodesTable from \"./Nodes/Nodes\";\r\nimport CompositeComponentTable from './CompositeComponent/CompositeComponent';\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n/**\r\n * Componente que representa al contenedor\r\n * de cada panel en las tabs\r\n */\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={2}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n/**\r\n * Manejador de props para cada tab\r\n * @param {int} index tab actual seleccionada\r\n */\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n/**\r\n * Componente que representa\r\n * al contenedor de las tablas\r\n * para manejo de nodos y aristas\r\n */\r\nconst TableItem = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  /**\r\n   * Manejador de eventos sobre\r\n   * cambios en tabs\r\n   * @param {Event} event\r\n   * @param {int} newValue nuevo indice\r\n   */\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  /**\r\n   * Manejador de eventos sobre\r\n   * cambios en el indice de las tabs\r\n   * @param {int} index nuevo indice\r\n   */\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Nodos\" {...a11yProps(0)} />\r\n          <Tab label=\"Relaciones\" {...a11yProps(1)} />\r\n          <Tab label=\"Componentes Compuestos\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <NodesTable closeDrawable={(value) => props.closeDrawable(value)} />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <EdgesTable />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <CompositeComponentTable\r\n            closeDrawable={(value) => props.closeDrawable(value)}\r\n          />\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"auto\",\r\n    zIndex: -1\r\n  },\r\n  inputs: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  inputAlign: {\r\n    marginRight: theme.spacing(1.5),\r\n  }\r\n}));\r\n\r\nexport default TableItem;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\LoginButton\\LoginButton.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarItem\\SidebarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Navbar\\Navbar.js",["226"],"import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  manageCreateVersion,\r\n  manageDeleteVersion,\r\n  manageEditVersion,\r\n} from \"../../helpers/versions/versions\";\r\nimport { downloadGraph } from \"../../helpers/content/downloader\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AppContext from \"../../auth/context/context\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Excel from \"../Excel/ExcelDownloader\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Modal from \"../FileReader/FileReader\";\r\nimport nodeHelper from \"../../helpers/nodes/nodes\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\r\n\r\n/**\r\n * Componente que representa la barra\r\n * superior de navegacion\r\n */\r\nconst Navbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const { user, selectedProject, setSelectedProject, setReloadSidebar, cy } =\r\n    useContext(AppContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /**\r\n   * Cerrar proyecto seleccionado\r\n   */\r\n  const onClose = () => {\r\n    Swal.fire({\r\n      text: \"¿Seguro que deseas cerrar \" + selectedProject.versionName + \"?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"var(--success)\",\r\n      cancelButtonColor: \"var(--error)\",\r\n      confirmButtonText: \"Si, seguro\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setSelectedProject();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {selectedProject ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div className={classes.title}>\r\n                <h1\r\n                  className={classes.h1}\r\n                  style={{ marginLeft: 0, minWidth: 145 }}\r\n                >\r\n                  {selectedProject.versionName}\r\n                </h1>\r\n                <IconButton\r\n                  aria-label=\"open edit\"\r\n                  className={classes.icon}\r\n                  onClick={() =>\r\n                    manageEditVersion(\r\n                      user,\r\n                      selectedProject,\r\n                      setSelectedProject,\r\n                      setReloadSidebar\r\n                    )\r\n                  }\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {selectedProject.versions > 1 ? (\r\n                  <IconButton\r\n                    aria-label=\"open delete\"\r\n                    className={classes.icon}\r\n                    onClick={() =>\r\n                      manageDeleteVersion(\r\n                        user,\r\n                        selectedProject,\r\n                        setSelectedProject,\r\n                        setReloadSidebar\r\n                      )\r\n                    }\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                ) : null}\r\n              </div>\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <NavbarItem\r\n                  icon={<GetAppIcon />}\r\n                  title={\"Descargar\"}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"true\"}\r\n                  onClick={handleClick}\r\n                />\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n                  PaperProps={{\r\n                    style: {\r\n                      padding: 10,\r\n                    },\r\n                  }}\r\n                >\r\n                  <Excel\r\n                    fileName={selectedProject.versionName}\r\n                    nodesData={nodeHelper.getNodeData(selectedProject)}\r\n                    relationsData={nodeHelper.getRelationData(selectedProject)}\r\n                  />\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      downloadGraph(\"jpg\", cy, selectedProject.versionName)\r\n                    }\r\n                  >\r\n                    Descargar JPG\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      downloadGraph(\"png\", cy, selectedProject.versionName)\r\n                    }\r\n                  >\r\n                    Descargar PNG\r\n                  </MenuItem>\r\n                </Menu>\r\n                <NavbarItem\r\n                  icon={<CreateIcon />}\r\n                  title={\"Crear nueva versión\"}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"false\"}\r\n                  onClick={() =>\r\n                    manageCreateVersion(user, selectedProject, setReloadSidebar)\r\n                  }\r\n                />\r\n                <NavbarItem\r\n                  icon={<AddIcon />}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"false\"}\r\n                  title={\"Agregar elementos\"}\r\n                  onClick={() => setShowModal(true)}\r\n                />\r\n\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onClose}\r\n                  edge=\"start\"\r\n                >\r\n                  <HighlightOffIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {showModal ? (\r\n        <Modal\r\n          open={showModal}\r\n          onClose={() => setShowModal(false)}\r\n          projectIndex={selectedProject.projectIndex}\r\n          type={\"Elementos\"}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: \"var(--background)\",\r\n  },\r\n\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    minWidth: 200,\r\n    flexShrink: 0,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n  },\r\n\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"nowrap\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  h1: {\r\n    color: \"var(--background)\",\r\n    margin: \"auto\",\r\n    fontFamily: \"var(font-family-content)\",\r\n    display: \"inline\",\r\n    paddingRight: 16,\r\n    fontSize: 24,\r\n  },\r\n\r\n  icon: {\r\n    color: \"var(--background)\",\r\n    paddingRight: 0,\r\n    paddingLeft: 5,\r\n  },\r\n}));\r\n\r\nexport default Navbar;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\nodes\\nodes.js",["227"],"/**\r\n * Agregar un nodo al set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.add(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"add\");\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"add\");\r\n};\r\n\r\n/**\r\n * Eliminar un nodo del set\r\n * @param {String} id ID del nodo\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeNode = (\r\n  id,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel,\r\n  color\r\n) => {\r\n  const temp = selectedNodes;\r\n  temp.delete(id);\r\n  setSelectedNodes(temp);\r\n  setSelectionModel([...temp]);\r\n  changeNodeColor(cy, id, \"remove\", color);\r\n  const edges = getEdges(cy, id);\r\n  changeEdgesColor(cy, edges, \"remove\");\r\n};\r\n\r\n/**\r\n * Manejar acción al hacer click en una\r\n * celda de la tabla\r\n * @param {String} nodeId\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCellClick = (\r\n  nodeId,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  if (selectedNodes.has(nodeId)) {\r\n    removeNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = false;\r\n    repaintEdges(selectedNodes, cy);\r\n  } else {\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Cambiar el color del nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeNodeColor = (cy, nodeId, type, color) => {\r\n  const backgroundColor = type === \"remove\" ? color : \"#ffc74d\";\r\n  cy.getElementById(nodeId).animate(\r\n    {\r\n      style: {\r\n        \"background-color\": backgroundColor,\r\n      },\r\n    },\r\n    {\r\n      duration: 0,\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Obtener todas las aristas de\r\n * un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} nodeId ID del nodo\r\n * @returns arreglo de objetos con info de aristas\r\n */\r\nconst getEdges = (cy, nodeId) => {\r\n  return cy.getElementById(nodeId).connectedEdges();\r\n};\r\n\r\n/**\r\n * Manejar el cambio de color de todas las aristas\r\n * de un nodo\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Array} edges Arreglo de objetos con info de aristas\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgesColor = (cy, edges, type) => {\r\n  edges.forEach((edge) => {\r\n    const edgeId = edge[\"_private\"][\"data\"].id;\r\n    changeEdgeColor(cy, edgeId, type);\r\n  });\r\n};\r\n\r\n/**\r\n * Cambiar el color de una arista\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {String} edgeId ID de la arista\r\n * @param {String} type Selección/Deselección del nodo\r\n */\r\nconst changeEdgeColor = (cy, edgeId, type) => {\r\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\r\n  cy.getElementById(edgeId).style({\r\n    \"line-color\": backgroundColor,\r\n    \"target-arrow-color\": backgroundColor,\r\n  });\r\n};\r\n\r\n/**\r\n * Manejar selección de columna de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst manageCheckSelection = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  const nodes = cy.filter(\"nodes\");\r\n  if (selectedNodes.size > 0) {\r\n    removeAllNodes(selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  } else {\r\n    addAllNodes(nodes, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n  }\r\n};\r\n\r\n/**\r\n * Deseleccionar todos los nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst removeAllNodes = (\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  selectedNodes.forEach((node) => {\r\n    removeNode(node, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(node)[\"_private\"][\"selected\"] = false;\r\n  });\r\n};\r\n\r\n/**\r\n * Seleccionar todos los nodos\r\n * @param {Array} nodeArray Arreglo de nodos\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n * @param {Function} setSelectionModel Función para setear el selection model\r\n */\r\nconst addAllNodes = (\r\n  nodeArray,\r\n  selectedNodes,\r\n  setSelectedNodes,\r\n  cy,\r\n  setSelectionModel\r\n) => {\r\n  nodeArray.forEach((node) => {\r\n    const nodeId = node[\"_private\"][\"data\"].id;\r\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\r\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\r\n  });\r\n};\r\n\r\n/**\r\n * Repintar las aristas\r\n * @param {Set} selectedNodes Nodos globalmente seleccionados\r\n * @param {Ref} cy Referencia a objeto cytoscape\r\n */\r\nconst repaintEdges = (selectedNodes, cy) => {\r\n  selectedNodes.forEach((node) => {\r\n    const edges = getEdges(cy, node);\r\n    changeEdgesColor(cy, edges);\r\n  });\r\n};\r\n\r\n/**\r\n * Conseguir todos los nodos del proyecto\r\n * actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo nodo\r\n */\r\nconst getNodeData = (selectedProject) => {\r\n  return selectedProject.elements.nodes.map((node, index) => ({\r\n    id: index,\r\n    name: node.data.name,\r\n    module: node.data.module,\r\n    incomompleteProperties: node.data.incomompleteProperties,\r\n    composite: node.data.composite ?? '-',\r\n  }));\r\n};\r\n\r\n/**\r\n * Conseguir todas las relaciones existentes\r\n * del proyecto actualmente abierto\r\n * @param {JSON} selectedProject Objeto con información del proyecto actual\r\n * @returns Arreglo de objetos de tipo aristas\r\n */\r\nconst getRelationData = (selectedProject) => {\r\n  return selectedProject.elements.edges?.map((edge, index) => {\r\n    return {\r\n      id: index,\r\n      source: edge.data.source,\r\n      target: edge.data.target,\r\n      relation: getRelationType(edge.scratch.relation),\r\n      index: edge.scratch?.index || '-',\r\n      dms: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.DMS.value\r\n        : 'No Calculado',\r\n      abstractness: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.abstractness?.value\r\n        : 'No Calculado',\r\n      coupling: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.coupling.value\r\n        : 'No Calculado',\r\n      instability: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.instability?.value\r\n        : 'No Calculado',\r\n      nameRessemblance: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.nameRessemblance?.value\r\n        : 'No Calculado',\r\n      packageMapping: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.packageMapping?.value\r\n        : 'No Calculado',\r\n      overall_q: edge.hasOwnProperty('metrics')\r\n        ? edge.metrics.overall_score_q?.value\r\n        : 'No Calculado',\r\n    };\r\n  })\r\n};\r\n\r\n/**\r\n * Obtener el nombre de una relación\r\n * @param {String} relation Tipo de relación\r\n * @returns Nombre de la relación\r\n */\r\nconst getRelationType = (relation) => {\r\n  switch (relation) {\r\n    case \"implements\":\r\n      return \"Implementación\";\r\n    case \"extends\":\r\n      return \"Extensión\";\r\n    case \"use\":\r\n      return \"Use\"\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default {\r\n  addNode,\r\n  manageCellClick,\r\n  manageCheckSelection,\r\n  getNodeData,\r\n  getRelationData,\r\n  removeNode,\r\n  repaintEdges,\r\n};\r\n\r\nexport {\r\n  repaintEdges\r\n}\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\FileReader\\FileReader.js",["228"],"import React, { useContext, useState } from \"react\";\r\nimport \"./FileReader.css\";\r\nimport \"react-dropzone-uploader/dist/styles.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\nimport { submitArchitecture } from \"../../helpers/architecture/architecture\";\r\nimport { manageElementsSubmit } from \"../../helpers/elements/elements\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport Dropzone from \"react-dropzone-uploader\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { manageErrors } from \"../../helpers/errors/errors\";\r\n\r\n/**\r\n * Componente que representa pop-up\r\n * para añadir archivos\r\n */\r\nconst FileReader = ({ onClose, open, projectIndex, type }) => {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState(\"\");\r\n    const [valid, setValid] = useState(true);\r\n    const [loader, setLoader] = useState(false);\r\n    const { user, setReloadSidebar, selectedProject, setSelectedProject } =\r\n        useContext(AppContext);\r\n\r\n    /**\r\n     * Manejar acción en base al tipo de data a subir a\r\n     * la base de datos\r\n     * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n     */\r\n    const handleSubmit = async (allFiles) => {\r\n        var response;\r\n        setLoader(true);\r\n        switch (type.toLowerCase()) {\r\n            case \"arquitectura\":\r\n                if (name !== \"\") {\r\n                    setLoader(true);\r\n                    response = await manageArchitectureSubmit(allFiles);\r\n                    manageResponse(response);\r\n                    break;\r\n                } else {\r\n                    setValid(false);\r\n                    break;\r\n                }\r\n            case \"elementos\":\r\n                setLoader(true);\r\n                manageElementsSubmit(\r\n                    user,\r\n                    allFiles,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    setReloadSidebar\r\n                );\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Manejar los modals a mostrar en base a\r\n     * la respuesta obtenida de la API\r\n     * @param {JSON} response respuesta de la llamada a la API\r\n     */\r\n    const manageResponse = (response) => {\r\n        setReloadSidebar(false);\r\n        if (Number.isInteger(response)) {\r\n            manageErrors(response);\r\n        } else {\r\n            ModalMessage(\"¡Arquitectura creada!\", \" \", \"success\", false, 4000);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Llamada a la API para agregar una nueva arquitectura\r\n     * @param {Array} allFiles arreglo que contiene todos los archivos XML\r\n     * @returns JSON de la respuesta de la API\r\n     */\r\n    const manageArchitectureSubmit = async (allFiles) => {\r\n        const response = await submitArchitecture(\r\n            allFiles,\r\n            user,\r\n            name,\r\n            projectIndex,\r\n            setReloadSidebar\r\n        );\r\n        return response;\r\n    };\r\n\r\n    /**\r\n     * Actualizar el nombre según se actualice el TextField\r\n     * @param {Event} event objeto de tipo evento\r\n     */\r\n    const handleChange = (event) => {\r\n        setValid(true);\r\n        setName(event.target.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (loader) {\r\n            setTimeout(setLoader(false), 5000);\r\n            onClose();\r\n        }\r\n    }, [loader]);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={open}\r\n                onClose={onClose}\r\n            >\r\n                <div className={classes.paper}>\r\n                    {loader ? (\r\n                        <Loader />\r\n                    ) : (\r\n                        <>\r\n                            <div>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"open drawer\"\r\n                                    onClick={onClose}\r\n                                    className={classes.onClose}\r\n                                    edge=\"start\"\r\n                                >\r\n                                    <HighlightOffIcon />\r\n                                </IconButton>\r\n                                <h2 className={classes.h1}>\r\n                                    Agregar prueba {type}\r\n                                </h2>\r\n                            </div>\r\n\r\n                            {type.toLowerCase() === \"arquitectura\" ? (\r\n                                <>\r\n                                    <TextField\r\n                                        required\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Nombre prueba\"\r\n                                        value={name}\r\n                                        onChange={handleChange}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    {!valid ? (\r\n                                        <div className={classes.validacion}>\r\n                                            * El nombre de la arquitectura es\r\n                                            obligatorio{\" \"}\r\n                                        </div>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n                            <Dropzone\r\n                                onSubmit={handleSubmit}\r\n                                styles={{\r\n                                    dropzone: {\r\n                                        maxHeight: 200,\r\n                                        maxWidth: 400,\r\n                                    },\r\n                                    dropzoneReject: {\r\n                                        borderColor: \"red\",\r\n                                        backgroundColor: \"#DAA\",\r\n                                    },\r\n                                    inputLabel: (files, extra) =>\r\n                                        extra.reject ? { color: \"red\" } : {},\r\n                                }}\r\n                                accept=\"text/xml\"\r\n                                inputContent={(files, extra) =>\r\n                                    extra.reject\r\n                                        ? \"Solo cargar archivos .xml\"\r\n                                        : \"Agrega archivos o hacer clic para buscar\"\r\n                                }\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: \"absolute\",\r\n        top: \"24%\",\r\n        left: \"23%\",\r\n        width: \"60%\",\r\n        minHeight: 300,\r\n        maxHeight: 600,\r\n        overflow: \"auto\",\r\n        border: \"none\",\r\n        borderRadius: 8,\r\n        background: \"var(--background)\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: \"1.25rem\",\r\n        outline: \"none\",\r\n        animationDuration: \"0.3s\",\r\n        animationTimingFunction: \"ease\",\r\n        animationDelay: \"0s\",\r\n        animationIterationCount: 1,\r\n        animationDirection: \"normal\",\r\n        animationFillMode: \"none\",\r\n        animationPlayState: \"running\",\r\n    },\r\n    h1: {\r\n        color: \"var(--primaryDark)\",\r\n        margin: \"auto\",\r\n        marginBottom: 35,\r\n        fontSize: \"1.875rem\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"var(font-family-content)\",\r\n    },\r\n    validacion: {\r\n        color: \"var(--error)\",\r\n        fontSize: 13,\r\n        margin: 5,\r\n    },\r\n    onClose: {\r\n        position: \"relative\",\r\n        left: \"98%\",\r\n        top: \"-9px\",\r\n        backgroundColor: \"var(primaryDark)\",\r\n        paddingTop: 0,\r\n        paddingRight: 0,\r\n        paddingBottom: 0,\r\n    },\r\n}));\r\n\r\nexport default FileReader;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\NavbarItem\\NavbarItem.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Excel\\ExcelDownloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\errors\\errors.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\elements\\elements.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\ModalMessage\\ModalMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\architecture\\architecture.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SelectMessage\\SelectMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\EditMessage\\EditMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\DeleteMessage\\DeleteMessage.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\architecture\\architecture.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\elements\\elements.js",["229"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\content\\downloader.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\login\\versions\\versions.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\Menu\\Menu.js",["230","231"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Nodes\\Nodes.js",["232","233","234","235"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\Edges\\Edges.js",["236","237","238","239","240","241"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport {\r\n  ManageMetrics,\r\n  ManageCombineMetrics,\r\n  ManageCreateCompositeComponent,\r\n} from '../../../helpers/metrics/metrics';\r\n\r\nimport AppContext from \"../../../auth/context/context\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\r\nimport \"./inputs.css\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { manageElementsUpdate } from '../../../helpers/elements/elements';\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * Componente que representa\r\n * la tabla de aristas del proyecto selecionado\r\n */\r\n\r\n\r\nconst EdgesTable = () => {\r\n  const { user, selectedProject, setSelectedProject, setComposite, /* elements setReloadSidebar*/ } = useContext(AppContext);\r\n  const [loader, setLoader] = useState(true);\r\n  const [loadingMetrics, setLoadingMetrics] = useState(false);\r\n  const [loadingComponents, setLoadingComponents] = useState(false);\r\n\r\n  const columns1 = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'source', headerName: 'Origen', width: 180 },\r\n    { field: 'target', headerName: 'Destino', width: 180 },\r\n    { field: 'relation', headerName: 'Relación', width: 150 },\r\n    { field: 'index', headerName: 'Indice', width: 150 },\r\n    { field: 'coupling', headerName: 'Coupling', width: 150 },\r\n    { field: 'abstractness', headerName: 'Abstracción', width: 180 },\r\n    { field: 'instability', headerName: 'Inestabilidad', width: 180 },\r\n    { field: 'dms', headerName: 'DMS', width: 150 },\r\n    {\r\n      field: 'nameRessemblance',\r\n      headerName: 'Semejanza de Nombre',\r\n      width: 180,\r\n    },\r\n    { field: 'packageMapping', headerName: 'Mapeo de Paquetes', width: 180 },\r\n    { field: 'overall_q', headerName: 'Q', width: 100 },\r\n  ];\r\n\r\n  // Getting the values of each input fields\r\n  const [dms, setDms] = useState(15);\r\n  const [nameResemblance, setNameResemblance] = useState(35);\r\n  const [packageMapping, setPackageMapping] = useState(25);\r\n  const [umbralName, setUmbralName] = useState(40);\r\n  const [umbralCoupling, setUmbralCoupling] = useState(0.45);\r\n  const [umbral, setUmbral] = useState(-0.1);\r\n  const [total, setTotal] = useState(0);\r\n  const [weighing, setWeighing ] = useState({\r\n    dms: dms,\r\n    coupling: umbralCoupling,\r\n    name_resemblance: nameResemblance,\r\n    package_mapping: packageMapping\r\n  })\r\n  const [render, setRender] = useState(false)\r\n  const [enable, setEnable] = useState(true)\r\n\r\n\r\n\r\n  // Calculate the sum total of all the input fields\r\n  function calculateTotal() {\r\n    const sum = dms + nameResemblance + packageMapping;\r\n    setTotal(sum);\r\n  }\r\n\r\n  // Getting all the nodes and mapping through each item\r\n  let nodesDos = selectedProject.elements.nodes.map((node) => {\r\n    return {\r\n      id: node.data.id,\r\n      name: node.data.name,\r\n      module: node.data.module,\r\n      incomompleteProperties: node.data.incomompleteProperties,\r\n    };\r\n  });\r\n\r\n  // Getting all the edges (relaciones)\r\n  let edgesDos = nodeHelper.getRelationData(selectedProject);\r\n\r\n  // For loop to get the Q and answer\r\n  function calculatelistas(){\r\n    ManageCreateCompositeComponent(user, selectedProject, umbral);\r\n    setComposite(true)\r\n  }\r\n\r\n  async function combineMetrics(setRender, render) {\r\n    const q = await ManageCombineMetrics(user, selectedProject, weighing);\r\n    setRender(!render);\r\n    return q\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoader(false);\r\n  }, [selectedProject.elements]);\r\n\r\n  useEffect(()=>{\r\n\r\n    manageElementsUpdate(\r\n      user,\r\n      selectedProject,\r\n      setSelectedProject,\r\n    );\r\n\r\n    edgesDos = nodeHelper.getRelationData(selectedProject);\r\n  },[render])\r\n\r\n  useEffect(() => {\r\n    setWeighing({\r\n       dms: dms,\r\n       coupling: umbralCoupling,\r\n       name_resemblance: nameResemblance,\r\n       package_mapping: packageMapping,\r\n     });\r\n    return calculateTotal();\r\n  }, [dms, nameResemblance, packageMapping, umbralCoupling]);\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ height: '80vh', width: '100%', overflow: 'scroll' }}>\r\n      <div className=\"form-wrapper\">\r\n        <form className=\"form-styles\">\r\n          <div className=\"input\">\r\n            <div className=\"input-align\">\r\n              <input\r\n                value={dms}\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setDms(+e.target.value);\r\n                  calculateTotal();\r\n                }}\r\n                className=\"input-styles\"\r\n                placeholder=\"ejm. 15\"\r\n                name=\"dms\"\r\n              />\r\n              <label className=\"input-label\">Peso DMS</label>\r\n            </div>\r\n            <div className=\"input-align\">\r\n              <input\r\n                className=\"input-styles\"\r\n                placeholder=\"ejm. 35\"\r\n                name=\"paquete\"\r\n                value={packageMapping}\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setPackageMapping(+e.target.value);\r\n                  calculateTotal();\r\n                }}\r\n              />\r\n              <label className=\"input-label\">Peso Mapeo de Paquete</label>\r\n            </div>\r\n            <div className=\"input-align-umbral\">\r\n              <input\r\n                className=\"input-styles-umbral\"\r\n                placeholder=\"ejm. 0.45\"\r\n                name=\"umbralS\"\r\n                value={nameResemblance}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setNameResemblance(Number(e.target.value));\r\n                }}\r\n              />\r\n              <label className=\"input-label\">Peso Semejanza de Nombre</label>\r\n            </div>\r\n            <div className=\"input-align-umbral\">\r\n              <input\r\n                className=\"input-styles-umbral\"\r\n                placeholder=\"ejm. 0.45\"\r\n                name=\"umbralS\"\r\n                value={umbralName}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setUmbralName(Number(e.target.value));\r\n                }}\r\n              />\r\n              <label className=\"input-label\">Umbral Semejanza</label>\r\n            </div>\r\n            <div className=\"input-align-umbral\">\r\n              <input\r\n                className=\"input-styles-umbral\"\r\n                placeholder=\"ejm. 0.65\"\r\n                name=\"umbralA\"\r\n                value={umbralCoupling}\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setUmbralCoupling(Number(e.target.value));\r\n                }}\r\n              />\r\n              <label className=\"input-label\">Umbral Acoplamiento</label>\r\n            </div>\r\n            <div className=\"input-align-umbral\">\r\n              <input\r\n                className=\"input-styles-umbral\"\r\n                placeholder=\"Umbral\"\r\n                name=\"umbralQ\"\r\n                value={umbral}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  setUmbral(Number(e.target.value));\r\n                }}\r\n              />\r\n              <label className=\"input-label\">Umbral Q</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            {!loadingMetrics ? (\r\n              <Button\r\n                className=\"btn-total\"\r\n                onClick={async () => {\r\n                  setLoadingMetrics(true);\r\n                  calculateTotal();\r\n                  await ManageMetrics(user, selectedProject, umbralName);\r\n                  setEnable(false);\r\n                  setLoadingMetrics(false);\r\n                }}\r\n              >\r\n                Calcular Metricas\r\n              </Button>\r\n            ) : (\r\n              <Loader />\r\n            )}\r\n            {!loadingComponents ? (\r\n              <Button\r\n                className=\"btn-total\"\r\n                disabled={enable}\r\n                onClick={async () => {\r\n                  setLoadingComponents(true);\r\n                  await combineMetrics(setRender, render);\r\n                  await calculatelistas();\r\n                  // await axios.put('/create_cc_board/', {\r\n                  //  data: {\r\n                  //   user_id: user.uid,\r\n                  //   project_index: selectedProject.projectIndex,\r\n                  //   arch_index: selectedProject.arcIndex,\r\n                  //   ver_index: selectedProject.verIndex,\r\n                  //  }\r\n\r\n                  // });\r\n                  setEnable(true);\r\n                  setLoadingComponents(false);\r\n                }}\r\n              >\r\n                Unir Componentes\r\n              </Button>\r\n            ) : (\r\n              <Loader />\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"total-sum\">\r\n        <p>\r\n          Total:<span>{total}</span>\r\n        </p>\r\n      </div>\r\n      {/* {total <= 100 ? (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          El total de los pesos no puede ser mayor a 100 —{' '}\r\n          <strong>Vuelve a calcular!</strong>\r\n        </Alert>\r\n      ) : (\r\n        <Alert severity=\"success\">\r\n          <AlertTitle>Calculo Exitoso</AlertTitle>\r\n        </Alert>\r\n      )} */}\r\n      {!loader ? (\r\n        <DataGrid rows={edgesDos} columns={columns1} pageSize={50} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EdgesTable;\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\projects\\projects.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\components\\TableItem\\CompositeComponent\\CompositeComponent.js",["242","243","244"],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\helpers\\metrics\\metrics.js",["245","246","247","248"],"import React, { useContext } from \"react\";\r\nimport {\r\n  putMetrics,\r\n  combineMetrics,\r\n  compositeComponents,\r\n} from '../../api/metrics/metrics.js';\r\n\r\nimport AppContext from \"../../auth/context/context.js\"\r\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\r\n\r\n\r\n\r\n\r\nconst ManageMetrics = async (user, selectedProject, umbralName) => {\r\n    // setReloadSidebar(true);\r\n        await putMetrics(user,\r\n        selectedProject.projectIndex,\r\n        selectedProject.arcIndex,\r\n        selectedProject.verIndex,\r\n        umbralName);\r\n\r\n      // ModalMessage(\r\n      //   \"¡Metricas calculadas con exito!\",\r\n      //   \" \",\r\n      //   \"success\",\r\n      //   false,\r\n      //   4000\r\n      // );\r\n    //window.location.reload()\r\n  };\r\n\r\n\r\n  const ManageCombineMetrics = async (user, selectedProject, weighing) => {\r\n    await combineMetrics(\r\n      user,\r\n      selectedProject.projectIndex,\r\n      selectedProject.arcIndex,\r\n      selectedProject.verIndex,\r\n      weighing\r\n    );\r\n  }\r\n\r\n  const ManageCreateCompositeComponent = async (user, selectedProject, umbral_q) => {\r\n    await compositeComponents (\r\n      user,\r\n      selectedProject.projectIndex,\r\n      selectedProject.arcIndex,\r\n      selectedProject.verIndex,\r\n      umbral_q\r\n    )\r\n  }\r\n\r\n  export { ManageMetrics, ManageCombineMetrics, ManageCreateCompositeComponent};\r\n","E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\metrics\\metrics.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\ComponentDiagram\\ComponentDiagram.js",[],"E:\\OneDrive - Universidad Metropolitana\\Tesis\\Desarrollo\\CL-front-tesis\\src\\api\\Variability\\Variability.js",[],{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":13},{"ruleId":"257","severity":1,"message":"258","line":14,"column":6,"nodeType":"259","endLine":14,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":20,"column":48,"nodeType":"263","messageId":"264","endLine":20,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":22,"column":48,"nodeType":"263","messageId":"264","endLine":22,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":49,"column":48,"nodeType":"263","messageId":"264","endLine":49,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":52,"column":48,"nodeType":"263","messageId":"264","endLine":52,"endColumn":50},{"ruleId":"261","severity":1,"message":"262","line":53,"column":33,"nodeType":"263","messageId":"264","endLine":53,"endColumn":35},{"ruleId":"261","severity":1,"message":"262","line":54,"column":53,"nodeType":"263","messageId":"264","endLine":54,"endColumn":55},{"ruleId":"265","severity":1,"message":"266","line":58,"column":26,"nodeType":"267","messageId":"268","endLine":58,"endColumn":28},{"ruleId":"261","severity":1,"message":"262","line":60,"column":41,"nodeType":"263","messageId":"264","endLine":60,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":62,"column":41,"nodeType":"267","messageId":"268","endLine":62,"endColumn":43},{"ruleId":"265","severity":1,"message":"266","line":63,"column":41,"nodeType":"267","messageId":"268","endLine":63,"endColumn":43},{"ruleId":"257","severity":1,"message":"269","line":97,"column":8,"nodeType":"259","endLine":97,"endColumn":29,"suggestions":"270"},{"ruleId":"253","severity":1,"message":"271","line":26,"column":10,"nodeType":"255","messageId":"256","endLine":26,"endColumn":20},{"ruleId":"253","severity":1,"message":"272","line":26,"column":22,"nodeType":"255","messageId":"256","endLine":26,"endColumn":35},{"ruleId":"253","severity":1,"message":"273","line":27,"column":17,"nodeType":"255","messageId":"256","endLine":27,"endColumn":25},{"ruleId":"257","severity":1,"message":"274","line":207,"column":6,"nodeType":"259","endLine":207,"endColumn":10,"suggestions":"275"},{"ruleId":"257","severity":1,"message":"276","line":213,"column":6,"nodeType":"259","endLine":213,"endColumn":19,"suggestions":"277"},{"ruleId":"253","severity":1,"message":"278","line":15,"column":10,"nodeType":"255","messageId":"256","endLine":15,"endColumn":19},{"ruleId":"253","severity":1,"message":"279","line":4,"column":22,"nodeType":"255","messageId":"256","endLine":4,"endColumn":30},{"ruleId":"280","severity":1,"message":"281","line":282,"column":1,"nodeType":"282","endLine":290,"endColumn":3},{"ruleId":"257","severity":1,"message":"283","line":109,"column":8,"nodeType":"259","endLine":109,"endColumn":16,"suggestions":"284"},{"ruleId":"253","severity":1,"message":"285","line":1,"column":10,"nodeType":"255","messageId":"256","endLine":1,"endColumn":28},{"ruleId":"253","severity":1,"message":"286","line":2,"column":29,"nodeType":"255","messageId":"256","endLine":2,"endColumn":37},{"ruleId":"253","severity":1,"message":"287","line":20,"column":19,"nodeType":"255","messageId":"256","endLine":20,"endColumn":34},{"ruleId":"253","severity":1,"message":"288","line":107,"column":13,"nodeType":"255","messageId":"256","endLine":107,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":114,"column":29,"nodeType":"267","messageId":"268","endLine":114,"endColumn":31},{"ruleId":"265","severity":1,"message":"266","line":116,"column":36,"nodeType":"267","messageId":"268","endLine":116,"endColumn":38},{"ruleId":"265","severity":1,"message":"266","line":170,"column":29,"nodeType":"267","messageId":"268","endLine":170,"endColumn":31},{"ruleId":"253","severity":1,"message":"289","line":14,"column":10,"nodeType":"255","messageId":"256","endLine":14,"endColumn":15},{"ruleId":"253","severity":1,"message":"290","line":14,"column":17,"nodeType":"255","messageId":"256","endLine":14,"endColumn":27},{"ruleId":"253","severity":1,"message":"291","line":17,"column":8,"nodeType":"255","messageId":"256","endLine":17,"endColumn":13},{"ruleId":"253","severity":1,"message":"292","line":76,"column":7,"nodeType":"255","messageId":"256","endLine":76,"endColumn":15},{"ruleId":"257","severity":1,"message":"293","line":112,"column":16,"nodeType":"294","endLine":112,"endColumn":59},{"ruleId":"257","severity":1,"message":"295","line":123,"column":6,"nodeType":"259","endLine":123,"endColumn":60,"suggestions":"296"},{"ruleId":"253","severity":1,"message":"291","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":13},{"ruleId":"257","severity":1,"message":"297","line":35,"column":8,"nodeType":"259","endLine":35,"endColumn":16,"suggestions":"298"},{"ruleId":"265","severity":1,"message":"266","line":121,"column":29,"nodeType":"267","messageId":"268","endLine":121,"endColumn":31},{"ruleId":"253","severity":1,"message":"299","line":1,"column":8,"nodeType":"255","messageId":"256","endLine":1,"endColumn":13},{"ruleId":"253","severity":1,"message":"300","line":1,"column":17,"nodeType":"255","messageId":"256","endLine":1,"endColumn":27},{"ruleId":"253","severity":1,"message":"301","line":8,"column":8,"nodeType":"255","messageId":"256","endLine":8,"endColumn":18},{"ruleId":"253","severity":1,"message":"302","line":9,"column":10,"nodeType":"255","messageId":"256","endLine":9,"endColumn":22},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'Vista' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'renderConnectorUML' and 'renderNodesUML'. Either include them or remove the dependency array.","ArrayExpression",["305"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.",["306"],"'composite2' is assigned a value but never used.","'setComposite2' is assigned a value but never used.","'setListT' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["308"],"'TextField' is defined but never used.","'useTheme' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],"'RestorePageRounded' is defined but never used.","'useState' is defined but never used.","'selectedProject' is assigned a value but never used.","'name' is assigned a value but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'axios' is defined but never used.","'nodesDos' is assigned a value but never used.","Assignments to the 'edgesDos' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'calculateTotal'. Either include it or remove the dependency array.",["310"],"React Hook useEffect has missing dependencies: 'selectedProject', 'setSelectedProject', and 'user'. Either include them or remove the dependency array.",["311"],"'React' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'ModalMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [renderConnectorUML, renderNodesUML]",{"range":"326","text":"327"},"Update the dependencies array to be: [user, reloadSidebar, get]",{"range":"328","text":"329"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"330","text":"331"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"332","text":"333"},"Update the dependencies array to be: [loader, onClose]",{"range":"334","text":"335"},"Update the dependencies array to be: [calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",{"range":"336","text":"337"},"Update the dependencies array to be: [render, selectedProject, setSelectedProject, user]",{"range":"338","text":"339"},[483,485],"[renderConnectorUML, renderNodesUML]",[2662,2683],"[user, reloadSidebar, get]",[5478,5482],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[5560,5573],"[checked, cy, setEdgesLabel]",[3654,3662],"[loader, onClose]",[4020,4074],"[calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",[1418,1426],"[render, selectedProject, setSelectedProject, user]"]