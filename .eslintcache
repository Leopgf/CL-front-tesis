[{"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\index.js":"1","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\reportWebVitals.js":"2","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\App.js":"3","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\firebase-config.js":"4","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\config\\settings\\settings.js":"5","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\styles\\Global.js":"6","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\auth\\context\\context.js":"7","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\screens\\Home\\Home.js":"8","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js":"9","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Table\\Table.js":"10","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Content\\Content.js":"11","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js":"12","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\login.js":"13","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js":"14","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Loader\\Loader.js":"15","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js":"16","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js":"17","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js":"18","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarHeader\\SidebarHeader.js":"19","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarItem\\SidebarItem.js":"20","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js":"21","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js":"22","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js":"23","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Menu\\Menu.js":"24","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\architecture\\architecture.js":"25","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\projects\\projects.js":"26","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\errors\\errors.js":"27","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js":"28","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\ModalMessage\\ModalMessage.js":"29","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\projects\\projects.js":"30","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\elements\\elements.js":"31","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js":"32","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\DeleteMessage\\DeleteMessage.js":"33","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js":"34","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js":"35","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\NavbarItem\\NavbarItem.js":"36","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js":"37","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js":"38","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\versions\\versions.js":"39","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js":"40","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js":"41","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js":"42","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js":"43","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\versions\\versions.js":"44"},{"size":877,"mtime":1652825345967,"results":"45","hashOfConfig":"46"},{"size":375,"mtime":1652825345969,"results":"47","hashOfConfig":"46"},{"size":1551,"mtime":1652825345893,"results":"48","hashOfConfig":"46"},{"size":474,"mtime":1665160090587,"results":"49","hashOfConfig":"46"},{"size":404,"mtime":1665932971166,"results":"50","hashOfConfig":"46"},{"size":251,"mtime":1652825345977,"results":"51","hashOfConfig":"46"},{"size":101,"mtime":1652825345902,"results":"52","hashOfConfig":"46"},{"size":3305,"mtime":1665956093334,"results":"53","hashOfConfig":"46"},{"size":651,"mtime":1652825345950,"results":"54","hashOfConfig":"46"},{"size":2577,"mtime":1665955907450,"results":"55","hashOfConfig":"46"},{"size":5585,"mtime":1665955891170,"results":"56","hashOfConfig":"46"},{"size":3478,"mtime":1665160090581,"results":"57","hashOfConfig":"46"},{"size":1083,"mtime":1665956133835,"results":"58","hashOfConfig":"46"},{"size":3104,"mtime":1666321457551,"results":"59","hashOfConfig":"46"},{"size":265,"mtime":1652825345916,"results":"60","hashOfConfig":"46"},{"size":8446,"mtime":1652825345924,"results":"61","hashOfConfig":"46"},{"size":1758,"mtime":1652825345919,"results":"62","hashOfConfig":"46"},{"size":1037,"mtime":1652825345934,"results":"63","hashOfConfig":"46"},{"size":2289,"mtime":1652825345935,"results":"64","hashOfConfig":"46"},{"size":1993,"mtime":1665158877559,"results":"65","hashOfConfig":"46"},{"size":8068,"mtime":1665724744813,"results":"66","hashOfConfig":"46"},{"size":3722,"mtime":1665158877558,"results":"67","hashOfConfig":"46"},{"size":6408,"mtime":1665160090579,"results":"68","hashOfConfig":"46"},{"size":3309,"mtime":1665967495235,"results":"69","hashOfConfig":"46"},{"size":4505,"mtime":1652825345952,"results":"70","hashOfConfig":"46"},{"size":3551,"mtime":1652825345962,"results":"71","hashOfConfig":"46"},{"size":1224,"mtime":1666316082111,"results":"72","hashOfConfig":"46"},{"size":3142,"mtime":1652825345956,"results":"73","hashOfConfig":"46"},{"size":354,"mtime":1652825345922,"results":"74","hashOfConfig":"46"},{"size":2302,"mtime":1652825345900,"results":"75","hashOfConfig":"46"},{"size":568,"mtime":1652825345897,"results":"76","hashOfConfig":"46"},{"size":672,"mtime":1652825345909,"results":"77","hashOfConfig":"46"},{"size":729,"mtime":1652825345907,"results":"78","hashOfConfig":"46"},{"size":648,"mtime":1652825345928,"results":"79","hashOfConfig":"46"},{"size":2265,"mtime":1652825345896,"results":"80","hashOfConfig":"46"},{"size":1078,"mtime":1652825345927,"results":"81","hashOfConfig":"46"},{"size":2200,"mtime":1652825345911,"results":"82","hashOfConfig":"46"},{"size":543,"mtime":1652825345954,"results":"83","hashOfConfig":"46"},{"size":4796,"mtime":1665159464169,"results":"84","hashOfConfig":"46"},{"size":2247,"mtime":1665724744810,"results":"85","hashOfConfig":"46"},{"size":10903,"mtime":1666394737941,"results":"86","hashOfConfig":"46"},{"size":994,"mtime":1666321066460,"results":"87","hashOfConfig":"46"},{"size":2270,"mtime":1666393793795,"results":"88","hashOfConfig":"46"},{"size":2503,"mtime":1665159464157,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1pxaff4",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"92"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\index.js",[],["187","188"],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\reportWebVitals.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\App.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\firebase-config.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\config\\settings\\settings.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\styles\\Global.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\auth\\context\\context.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\screens\\Home\\Home.js",["189"],"// @ts-nocheck\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./Home.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport clsx from \"clsx\";\n\nimport Sidebar from \"../../components/SideBar/Sidebar\";\nimport Content from \"../../components/Content/Content\";\nimport Table from \"../../components/Table/Table\";\n\nimport Swal from \"sweetalert2\";\n\nimport AppContext from \"../../auth/context/context\";\nimport { googleAuth } from \"../../firebase/googleAuth\";\nimport { postLogin } from \"../../api/login/login\";\n\n/** Componente que representa la página\n *  principal de navegación\n */\nfunction Home() {\n  const classes = useStyles();\n  const [drawerItems, setDrawerItems] = useState();\n  const [open, setOpen] = useState(true);\n  const [load, setLoad] = useState(true);\n  const {\n    user,\n    setUser,\n    reloadSidebar,\n    selectedProject,\n    setSelectedProject,\n  } = useContext(AppContext);\n\n  /**\n   * Llamar a google auth para establecer ususario\n   */\n  const login = async () => {\n    let drawer = await googleAuth(setUser);\n    setDrawerItems(drawer);\n    setLoad(false);\n  };\n\n  /**\n   * Mensaje de confirmación para cerrar sesión\n   */\n  const logout = () => {\n    Swal.fire({\n      text: \"¿Seguro que deseas cerrar sesión?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"var(--success)\",\n      cancelButtonColor: \"var(--error)\",\n      confirmButtonText: \"Si, seguro\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setSelectedProject();\n        setLoad(true);\n        localStorage.removeItem(\"user\");\n        setUser(null);\n        setLoad(false);\n      }\n    });\n  };\n\n  /**\n   * Cambiar estado de usuario e iniciar sesion\n   */\n  async function changeState() {\n    login();\n  }\n\n  /**\n   * Actualizar arreglo de proyectos\n   */\n  const getProject = async () => {\n    let elements = await postLogin(user, setUser);\n    setDrawerItems(elements);\n    setLoad(false);\n  };\n\n  /**\n   * Llamar a la actualizacion de proyectos\n   */\n  async function get() {\n    getProject();\n  }\n\n  useEffect(() => {\n    setLoad(false);\n    if (user || reloadSidebar) {\n      setLoad(true);\n      get();\n    }\n  }, [user, reloadSidebar]);\n\n  return (\n    <>\n      <Sidebar\n        items={drawerItems}\n        login={changeState}\n        logout={logout}\n        loader={load}\n        open={open}\n        setOpen={setOpen}\n      />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        {selectedProject ? (\n          <div>\n            <Content />\n            <Table />\n          </div>\n        ) : null}\n      </main>\n    </>\n  );\n}\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    paddingLeft: theme.spacing(2),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginTop: 70,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 270,\n  },\n}));\n\nexport default Home;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Table\\Table.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Content\\Content.js",["190","191"],"// @ts-nocheck\nimport React, { useContext, useState, useEffect } from \"react\";\nimport \"./Content.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport AppContext from \"../../auth/context/context\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport Loader from \"../Loader/Loader\";\nimport nodesHelper from \"../../helpers/nodes/nodes\";\n\n/**\n * Componente que representa el contenido\n * de la arquitectura seleccionada\n */\nconst Content = () => {\n  const classes = useStyles();\n  const [checked, setChecked] = useState(false);\n  const [elementos, setElementos] = useState();\n  const [load, setLoad] = useState(false);\n  const {\n    selectedProject,\n    cy, setCy,\n    selectedNodes, setSelectedNodes,\n    setSelectionModel,\n  } = useContext(AppContext);\n\n    /**\n   * Obtener el tipo de relación\n   * @param {JSON} ele Objeto de cytoscape\n   * @returns String tipo de label\n   */\n  const getEdgeLabel = (ele) => {\n    if(!checked) return \"\";\n    switch (ele.scratch(\"relation\")) {\n      case \"implements\":\n        return \"Implementa\";\n      case \"extends\":\n        return \"Extiende\";\n      case \"use\":\n        return \"Usa\";\n      default:\n        return \"\";\n    }\n  }\n\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\n  var state = {\n    layout: {\n      name: \"circle\",\n      fit: true,\n      padding: 30,\n      avoidOverlap: true,\n      nodeDimensionsIncludeLabels: true,\n      avoidOverlapPadding: 150,\n    },\n    stylesheet: [\n      {\n        selector: \"node\",\n        style: {\n          content: \"data(id)\",\n          \"font-size\": 20,\n          shape: \"round-rectangle\",\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 80,\n          \"text-valign\": \"center\",\n          \"text-outline-color\": \"#18202C\",\n          width: 270,\n          color: \"white\",\n          height: 40,\n          \"background-color\": \"#18202C\",\n        },\n      },\n      {\n        selector: \"edge\",\n        style: {\n          content: getEdgeLabel,\n          width: 4,\n          \"font-size\": 20,\n          \"curve-style\": \"bezier\",\n          \"edge-text-rotation\": \"autorotate\",\n          \"target-arrow-shape\": \"triangle-tee\",\n          \"text-valign\": \"top\",\n          \"text-halign\": \"center\",\n          color: \"#fff\",\n          \"text-outline-color\": \"#18202C\",\n          \"text-outline-width\": 3,\n          \"line-color\": \"#18202C\",\n          \"target-arrow-color\": \"#18202C\",\n        },\n      },\n    ],\n  };\n\n  /**\n   * Mostrar u ocultar el nombre de las\n   * relaciones entre los nodos\n   */\n  const setEdgesLabel = () => {\n    if (!checked) {\n      cy.style().selector(\"edge\").style({\n        content: \"\",\n      });\n    } else {\n      cy.style()\n        .selector(\"edge\")\n        .style({\n          content: getEdgeLabel\n        });\n    }\n  };\n\n  /**\n   * Manejador de evento al seleccionar nodo\n   * @param {Event} event referencia al elemento\n   */\n  const selectNodeHandler = (evt) => {\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\n    nodesHelper.addNode(\n      nodeId,\n      selectedNodes,\n      setSelectedNodes,\n      cy,\n      setSelectionModel\n    );\n    // cy.animate(\n    //   {\n    //     fit: {\n    //       eles: cy.getElementById(nodeId),\n    //       padding: 30,\n    //     },\n    //   },\n    //   {\n    //     duration: 100,\n    //   }\n    // );\n    evt.preventDefault();\n  };\n\n  /**\n   * Manejador de evento al dejar de seleccionar nodo\n   * @param {Event} event referencia al elemento\n   */\n  const unselectNodeHandler = (evt) => {\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\n    // cy.fit();\n    nodesHelper.removeNode(\n      nodeId,\n      selectedNodes,\n      setSelectedNodes,\n      cy,\n      setSelectionModel\n    );\n    nodesHelper.repaintEdges(selectedNodes, cy);\n  };\n\n  useEffect(() => {\n    if (cy) {\n      cy.on(\"select\", \"node\", selectNodeHandler);\n      cy.on(\"unselect\", \"node\", unselectNodeHandler);\n      setSelectionModel([]);\n      setSelectedNodes(new Set());\n    }\n  }, [cy]);\n\n  useEffect(() => {\n    if (cy) {\n      setEdgesLabel();\n    }\n  }, [checked, cy]);\n\n  useEffect(() => {\n    setLoad(true);\n    setElementos(selectedProject.elements);\n    //console.log(selectedProject.elements);\n  }, [selectedProject]);\n\n  useEffect(() => {\n    if (load) {\n      setLoad(false);\n      setChecked(false);\n    }\n  }, [elementos, load]);\n\n  return (\n    <>\n      {load ? (\n        <Loader />\n      ) : elementos ? (\n        <div>\n          <div className={classes.onClose}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={checked}\n                  onChange={() => setChecked((prev) => !prev)}\n                />\n              }\n              labelPlacement=\"start\"\n              style={{ marginRight: 5 }}\n              label = \"\"\n            />\n          </div>\n\n          <CytoscapeComponent\n            className=\"component\"\n            cy={(cyt) => {\n              setCy(cyt);\n            }}\n            elements={CytoscapeComponent.normalizeElements(elementos)}\n            id=\"component\"\n            layout={state.layout}\n            maxZoom={2}\n            pan={{ x: 150, y: 30 }}\n            stylesheet={state.stylesheet}\n            zoom={0.5}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  onClose: {\n    position: \"absolute\",\n    right: \"18px\",\n    top: \"75px\",\n    zIndex: 3,\n  },\n}));\n\nexport default Content;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\login.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\TableItem.js",["192"],"// @ts-nocheck\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\n\nimport EdgesTable from \"./Edges/Edges\";\nimport NodesTable from \"./Nodes/Nodes\";\nimport { TextField } from \"@material-ui/core\";\n\n/**\n * Componente que representa al contenedor\n * de cada panel en las tabs\n */\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={2}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n/**\n * Manejador de props para cada tab\n * @param {int} index tab actual seleccionada\n */\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\n/**\n * Componente que representa\n * al contenedor de las tablas\n * para manejo de nodos y aristas\n */\nconst TableItem = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  /**\n   * Manejador de eventos sobre\n   * cambios en tabs\n   * @param {Event} event\n   * @param {int} newValue nuevo indice\n   */\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  /**\n   * Manejador de eventos sobre\n   * cambios en el indice de las tabs\n   * @param {int} index nuevo indice\n   */\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Nodos\" {...a11yProps(0)} />\n          <Tab label=\"Relaciones\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <NodesTable />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <EdgesTable />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"auto\",\n  },\n  inputs: {\n    padding: theme.spacing(2),\n  },\n  inputAlign: {\n    marginRight: theme.spacing(1.5),\n  }\n}));\n\nexport default TableItem;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Navbar\\Navbar.js",["193"],"import React, { useContext, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  manageCreateVersion,\r\n  manageDeleteVersion,\r\n  manageEditVersion,\r\n} from \"../../helpers/versions/versions\";\r\nimport { downloadGraph } from \"../../helpers/content/downloader\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport AppContext from \"../../auth/context/context\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport Excel from \"../Excel/ExcelDownloader\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Modal from \"../FileReader/FileReader\";\r\nimport nodeHelper from \"../../helpers/nodes/nodes\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\r\n\r\n/**\r\n * Componente que representa la barra\r\n * superior de navegacion\r\n */\r\nconst Navbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const { user, selectedProject, setSelectedProject, setReloadSidebar, cy } =\r\n    useContext(AppContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  /**\r\n   * Cerrar proyecto seleccionado\r\n   */\r\n  const onClose = () => {\r\n    Swal.fire({\r\n      text: \"¿Seguro que deseas cerrar \" + selectedProject.versionName + \"?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"var(--success)\",\r\n      cancelButtonColor: \"var(--error)\",\r\n      confirmButtonText: \"Si, seguro\",\r\n      cancelButtonText: \"Cancelar\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        setSelectedProject();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {selectedProject ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div className={classes.title}>\r\n                <h1\r\n                  className={classes.h1}\r\n                  style={{ marginLeft: 0, minWidth: 145 }}\r\n                >\r\n                  {selectedProject.versionName}\r\n                </h1>\r\n                <IconButton\r\n                  aria-label=\"open edit\"\r\n                  className={classes.icon}\r\n                  onClick={() =>\r\n                    manageEditVersion(\r\n                      user,\r\n                      selectedProject,\r\n                      setSelectedProject,\r\n                      setReloadSidebar\r\n                    )\r\n                  }\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                {selectedProject.versions > 1 ? (\r\n                  <IconButton\r\n                    aria-label=\"open delete\"\r\n                    className={classes.icon}\r\n                    onClick={() =>\r\n                      manageDeleteVersion(\r\n                        user,\r\n                        selectedProject,\r\n                        setSelectedProject,\r\n                        setReloadSidebar\r\n                      )\r\n                    }\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                ) : null}\r\n              </div>\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <NavbarItem\r\n                  icon={<GetAppIcon />}\r\n                  title={\"Descargar\"}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"true\"}\r\n                  onClick={handleClick}\r\n                />\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n                  PaperProps={{\r\n                    style: {\r\n                      padding: 10,\r\n                    },\r\n                  }}\r\n                >\r\n                  <Excel\r\n                    fileName={selectedProject.versionName}\r\n                    nodesData={nodeHelper.getNodeData(selectedProject)}\r\n                    relationsData={nodeHelper.getRelationData(selectedProject)}\r\n                  />\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      downloadGraph(\"jpg\", cy, selectedProject.versionName)\r\n                    }\r\n                  >\r\n                    Descargar JPG\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={() =>\r\n                      downloadGraph(\"png\", cy, selectedProject.versionName)\r\n                    }\r\n                  >\r\n                    Descargar PNG\r\n                  </MenuItem>\r\n                </Menu>\r\n                <NavbarItem\r\n                  icon={<CreateIcon />}\r\n                  title={\"Crear nueva versión\"}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"false\"}\r\n                  onClick={() =>\r\n                    manageCreateVersion(user, selectedProject, setReloadSidebar)\r\n                  }\r\n                />\r\n                <NavbarItem\r\n                  icon={<AddIcon />}\r\n                  aria_controls={\"simple-menu\"}\r\n                  aria_haspopup={\"false\"}\r\n                  title={\"Agregar elementos\"}\r\n                  onClick={() => setShowModal(true)}\r\n                />\r\n\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onClose}\r\n                  edge=\"start\"\r\n                >\r\n                  <HighlightOffIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n      {showModal ? (\r\n        <Modal\r\n          open={showModal}\r\n          onClose={() => setShowModal(false)}\r\n          projectIndex={selectedProject.projectIndex}\r\n          type={\"Elementos\"}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst drawerWidth = 280;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    color: \"var(--background)\",\r\n  },\r\n\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    minWidth: 200,\r\n    flexShrink: 0,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n  },\r\n\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"nowrap\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  h1: {\r\n    color: \"var(--background)\",\r\n    margin: \"auto\",\r\n    fontFamily: \"var(font-family-content)\",\r\n    display: \"inline\",\r\n    paddingRight: 16,\r\n    fontSize: 24,\r\n  },\r\n\r\n  icon: {\r\n    color: \"var(--background)\",\r\n    paddingRight: 0,\r\n    paddingLeft: 5,\r\n  },\r\n}));\r\n\r\nexport default Navbar;\r\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\LoginButton\\LoginButton.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarFooter\\SidebarFooter.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarHeader\\SidebarHeader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarItem\\SidebarItem.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js",["194"],"/**\n * Agregar un nodo al set\n * @param {String} id ID del nodo\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst addNode = (\n  id,\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  const temp = selectedNodes;\n  temp.add(id);\n  setSelectedNodes(temp);\n  setSelectionModel([...temp]);\n  changeNodeColor(cy, id, \"add\");\n  const edges = getEdges(cy, id);\n  changeEdgesColor(cy, edges, \"add\");\n};\n\n/**\n * Eliminar un nodo del set\n * @param {String} id ID del nodo\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst removeNode = (\n  id,\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  const temp = selectedNodes;\n  temp.delete(id);\n  setSelectedNodes(temp);\n  setSelectionModel([...temp]);\n  changeNodeColor(cy, id, \"remove\");\n  const edges = getEdges(cy, id);\n  changeEdgesColor(cy, edges, \"remove\");\n};\n\n/**\n * Manejar acción al hacer click en una\n * celda de la tabla\n * @param {String} nodeId\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst manageCellClick = (\n  nodeId,\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  if (selectedNodes.has(nodeId)) {\n    removeNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = false;\n    repaintEdges(selectedNodes, cy);\n  } else {\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\n  }\n};\n\n/**\n * Cambiar el color del nodo\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {String} nodeId ID del nodo\n * @param {String} type Selección/Deselección del nodo\n */\nconst changeNodeColor = (cy, nodeId, type) => {\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\n  cy.getElementById(nodeId).animate(\n    {\n      style: {\n        \"background-color\": backgroundColor,\n      },\n    },\n    {\n      duration: 0,\n    }\n  );\n};\n\n/**\n * Obtener todas las aristas de\n * un nodo\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {String} nodeId ID del nodo\n * @returns arreglo de objetos con info de aristas\n */\nconst getEdges = (cy, nodeId) => {\n  return cy.getElementById(nodeId).connectedEdges();\n};\n\n/**\n * Manejar el cambio de color de todas las aristas\n * de un nodo\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Array} edges Arreglo de objetos con info de aristas\n * @param {String} type Selección/Deselección del nodo\n */\nconst changeEdgesColor = (cy, edges, type) => {\n  edges.forEach((edge) => {\n    const edgeId = edge[\"_private\"][\"data\"].id;\n    changeEdgeColor(cy, edgeId, type);\n  });\n};\n\n/**\n * Cambiar el color de una arista\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {String} edgeId ID de la arista\n * @param {String} type Selección/Deselección del nodo\n */\nconst changeEdgeColor = (cy, edgeId, type) => {\n  const backgroundColor = type === \"remove\" ? \"#18202C\" : \"#ffc74d\";\n  cy.getElementById(edgeId).style({\n    \"line-color\": backgroundColor,\n    \"target-arrow-color\": backgroundColor,\n  });\n};\n\n/**\n * Manejar selección de columna de nodos\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst manageCheckSelection = (\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  const nodes = cy.filter(\"nodes\");\n  if (selectedNodes.size > 0) {\n    removeAllNodes(selectedNodes, setSelectedNodes, cy, setSelectionModel);\n  } else {\n    addAllNodes(nodes, selectedNodes, setSelectedNodes, cy, setSelectionModel);\n  }\n};\n\n/**\n * Deseleccionar todos los nodos\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst removeAllNodes = (\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  selectedNodes.forEach((node) => {\n    removeNode(node, selectedNodes, setSelectedNodes, cy, setSelectionModel);\n    cy.getElementById(node)[\"_private\"][\"selected\"] = false;\n  });\n};\n\n/**\n * Seleccionar todos los nodos\n * @param {Array} nodeArray Arreglo de nodos\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Function} setSelectedNodes Función para setear los nodos seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n * @param {Function} setSelectionModel Función para setear el selection model\n */\nconst addAllNodes = (\n  nodeArray,\n  selectedNodes,\n  setSelectedNodes,\n  cy,\n  setSelectionModel\n) => {\n  nodeArray.forEach((node) => {\n    const nodeId = node[\"_private\"][\"data\"].id;\n    addNode(nodeId, selectedNodes, setSelectedNodes, cy, setSelectionModel);\n    cy.getElementById(nodeId)[\"_private\"][\"selected\"] = true;\n  });\n};\n\n/**\n * Repintar las aristas\n * @param {Set} selectedNodes Nodos globalmente seleccionados\n * @param {Ref} cy Referencia a objeto cytoscape\n */\nconst repaintEdges = (selectedNodes, cy) => {\n  selectedNodes.forEach((node) => {\n    const edges = getEdges(cy, node);\n    changeEdgesColor(cy, edges);\n  });\n};\n\n/**\n * Conseguir todos los nodos del proyecto\n * actualmente abierto\n * @param {JSON} selectedProject Objeto con información del proyecto actual\n * @returns Arreglo de objetos de tipo nodo\n */\nconst getNodeData = (selectedProject) => {\n  return selectedProject.elements.nodes.map((node, index) => ({\n    id: index,\n    name: node.data.name,\n    module: node.data.module,\n    incomompleteProperties: node.data.incomompleteProperties,\n  }));\n};\n\n/**\n * Conseguir todas las relaciones existentes\n * del proyecto actualmente abierto\n * @param {JSON} selectedProject Objeto con información del proyecto actual\n * @returns Arreglo de objetos de tipo aristas\n */\nconst getRelationData = (selectedProject) => {\n  return selectedProject.elements.edges?.map((edge, index) => {\n    return {\n      id: index,\n      source: edge.data.source,\n      target: edge.data.target,\n      relation: getRelationType(edge.scratch.relation),\n      dms: edge.hasOwnProperty('metrics') ? edge.metrics.DMS.value : 'No Calculado',\n      abstractness: edge.hasOwnProperty('metrics') ? edge.metrics.abstractness?.value : 'No Calculado',\n      coupling: edge.hasOwnProperty('metrics') ? edge.metrics.coupling.value : 'No Calculado',\n      instability: edge.hasOwnProperty('metrics') ? edge.metrics.instability?.value : 'No Calculado',\n      nameRessemblance: edge.hasOwnProperty('metrics') ? edge.metrics.nameRessemblance?.value : 'No Calculado',\n      packageMapping: edge.hasOwnProperty('metrics') ? edge.metrics.packageMapping?.value : 'No Calculado',\n    };\n  })\n};\n\n/**\n * Obtener el nombre de una relación\n * @param {String} relation Tipo de relación\n * @returns Nombre de la relación\n */\nconst getRelationType = (relation) => {\n  switch (relation) {\n    case \"implements\":\n      return \"Implementación\";\n    case \"extends\":\n      return \"Extensión\";\n    case \"use\":\n      return \"Use\"\n    default:\n      break;\n  }\n};\n\nexport default {\n  addNode,\n  manageCellClick,\n  manageCheckSelection,\n  getNodeData,\n  getRelationData,\n  removeNode,\n  repaintEdges,\n};\n\nexport {\n  repaintEdges\n}\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SidebarDetail\\SidebarDetail.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js",["195","196"],"import React, { useContext, useState } from \"react\";\nimport \"./FileReader.css\";\nimport \"react-dropzone-uploader/dist/styles.css\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\nimport { submitArchitecture } from \"../../helpers/architecture/architecture\";\nimport { manageElementsSubmit } from \"../../helpers/elements/elements\";\n\nimport AppContext from \"../../auth/context/context\";\nimport Dropzone from \"react-dropzone-uploader\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Loader from \"../Loader/Loader\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { manageErrors } from \"../../helpers/errors/errors\";\n\n/**\n * Componente que representa pop-up\n * para añadir archivos\n */\nconst FileReader = ({ onClose, open, projectIndex, type }) => {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [valid, setValid] = useState(true);\n  const [loader, setLoader] = useState(false);\n  const {\n    user,\n    setReloadSidebar,\n    selectedProject, setSelectedProject,\n  } = useContext(AppContext);\n\n  /**\n   * Manejar acción en base al tipo de data a subir a\n   * la base de datos\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\n   */\n  const handleSubmit = async (allFiles) => {\n    var response;\n    setLoader(true);\n    switch (type.toLowerCase()) {\n      case \"arquitectura\":\n        if (name !== \"\") {\n          setLoader(true);\n          response = await manageArchitectureSubmit(allFiles);\n          manageResponse(response);\n          break;\n        } else {\n          setValid(false);\n          break;\n        }\n      case \"elementos\":\n        setLoader(true);\n        manageElementsSubmit(\n          user,\n          allFiles,\n          selectedProject,\n          setSelectedProject,\n          setReloadSidebar\n        );\n        break;\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Manejar los modals a mostrar en base a\n   * la respuesta obtenida de la API\n   * @param {JSON} response respuesta de la llamada a la API\n   */\n  const manageResponse = (response) => {\n    setReloadSidebar(false);\n    if (Number.isInteger(response)) {\n      manageErrors(response)\n    } else {\n      ModalMessage(\"¡Arquitectura creada!\", \" \", \"success\", false, 4000);\n    }\n  };\n\n  /**\n   * Llamada a la API para agregar una nueva arquitectura\n   * @param {Array} allFiles arreglo que contiene todos los archivos XML\n   * @returns JSON de la respuesta de la API\n   */\n  const manageArchitectureSubmit = async (allFiles) => {\n    const response = await submitArchitecture(\n      allFiles,\n      user,\n      name,\n      projectIndex,\n      setReloadSidebar\n    );\n    return response;\n  };\n\n  /**\n   * Actualizar el nombre según se actualice el TextField\n   * @param {Event} event objeto de tipo evento\n   */\n  const handleChange = (event) => {\n    setValid(true);\n    setName(event.target.value);\n  };\n\n  React.useEffect(() => {\n    if (loader) {\n      setTimeout(setLoader(false), 5000);\n      onClose();\n    }\n  }, [loader]);\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={onClose}\n      >\n        <div className={classes.paper}>\n          {loader ? (\n            <Loader />\n          ) : (\n            <>\n              <div>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onClose}\n                  className={classes.onClose}\n                  edge=\"start\"\n                >\n                  <HighlightOffIcon />\n                </IconButton>\n                <h2 className={classes.h1}>Agregar prueba {type}</h2>\n              </div>\n\n              {type.toLowerCase() === \"arquitectura\" ? (\n                <>\n                  <TextField\n                    required\n                    id=\"outlined-basic\"\n                    label=\"Nombre prueba\"\n                    value={name}\n                    onChange={handleChange}\n                    variant=\"outlined\"\n                  />\n                  {!valid ? (\n                    <div className={classes.validacion}>\n                      * El nombre de la arquitectura es obligatorio{\" \"}\n                    </div>\n                  ) : null}\n                </>\n              ) : null}\n              <Dropzone\n                onSubmit={handleSubmit}\n                styles={{ dropzone: { maxHeight: 200, maxWidth: 400 } }}\n                accept=\"text/xml\"\n                inputContent={(files, extra) =>\n                  extra.reject\n                    ? \"Solo cargar archivos .xml\"\n                    : \"Agrega archivos o hacer clic para buscar\"\n                }\n                styles={{\n                  dropzoneReject: {\n                    borderColor: \"red\",\n                    backgroundColor: \"#DAA\",\n                  },\n                  inputLabel: (files, extra) =>\n                    extra.reject ? { color: \"red\" } : {},\n                }}\n              />\n            </>\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    top: \"24%\",\n    left: \"23%\",\n    width: \"60%\",\n    minHeight: 300,\n    maxHeight: 600,\n    overflow: \"auto\",\n    border: \"none\",\n    borderRadius: 8,\n    background: \"var(--background)\",\n    boxShadow: theme.shadows[5],\n    padding: \"1.25rem\",\n    outline: \"none\",\n    animationDuration: \"0.3s\",\n    animationTimingFunction: \"ease\",\n    animationDelay: \"0s\",\n    animationIterationCount: 1,\n    animationDirection: \"normal\",\n    animationFillMode: \"none\",\n    animationPlayState: \"running\",\n  },\n  h1: {\n    color: \"var(--primaryDark)\",\n    margin: \"auto\",\n    marginBottom: 35,\n    fontSize: \"1.875rem\",\n    textAlign: \"center\",\n    fontFamily: \"var(font-family-content)\",\n  },\n  validacion: {\n    color: \"var(--error)\",\n    fontSize: 13,\n    margin: 5,\n  },\n  onClose: {\n    position: \"relative\",\n    left: \"98%\",\n    top: \"-9px\",\n    backgroundColor: \"var(primaryDark)\",\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n  },\n}));\n\nexport default FileReader;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Menu\\Menu.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\architecture\\architecture.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\projects\\projects.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\errors\\errors.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\ModalMessage\\ModalMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\projects\\projects.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\elements\\elements.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\EditMessage\\EditMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\DeleteMessage\\DeleteMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\NavbarItem\\NavbarItem.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\versions\\versions.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Nodes\\Nodes.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js",["197","198","199","200","201","202"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n// import { putMetrics } from \"../../../api/metrics/metrics\";\n\nimport { ManageMetrics, ManageCombineMetrics } from \"../../../helpers/metrics/metrics\"\n\nimport AppContext from \"../../../auth/context/context\";\nimport Loader from \"../../Loader/Loader\";\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\nimport \"./inputs.css\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Button } from \"@material-ui/core\";\n\n/**\n * Componente que representa\n * la tabla de aristas del proyecto selecionado\n */\n\n\nconst EdgesTable = () => {\n  const { user, selectedProject, elements/*setReloadSidebar*/ } = useContext(AppContext);\n  const [loader, setLoader] = useState(true);\n\n  const columns1 = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"source\", headerName: \"Origen\", width: 300 },\n    { field: \"target\", headerName: \"Destino\", width: 300 },\n    { field: \"relation\", headerName: \"Relación\", width: 200 },\n    { field: \"coupling\", headerName: \"Coupling\", width: 200 },\n    { field: \"abstractness\", headerName: \"Abstracción\", width: 200 },\n    { field: \"instability\", headerName: \"Inestabilidad\", width: 200 },\n    { field: \"dms\", headerName: \"DMS\", width: 200 },\n    { field: \"nameRessemblance\", headerName: \"Semejanza de Nombre\", width: 200 },\n    { field: \"packageMapping\", headerName: \"Mapeo de Paquetes\", width: 200 },\n    { field: \"q\", headerName: \"Q\", width: 250 },\n    { field: \"answer\", headerName: \"Candidato a Compuesto?\", width: 250 },\n\n  ];\n\n  // Getting the values of each input fields\n  const [dms, setDms] = useState(15);\n  const [nameResemblance, setNameResemblance] = useState(35);\n  const [packageMapping, setPackageMapping] = useState(25);\n  const [umbralName, setUmbralName] = useState(40);\n  const [umbralCoupling, setUmbralCoupling] = useState(65);\n  const [umbral, setUmbral] = useState(0.4);\n  // const [sum, setSum] = useState(dms + nameResemblance + packageMapping);\n  // let total = (dms + nameResemblance + packageMapping)\n  const [sum, setSum] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [weighing, setWeighing ] = useState({\n    dms: 0,\n    coupling: 0,\n    name_resemblance: 0,\n    package_mapping: 0\n  })\n\n\n\n  // Calculate the sum total of all the input fields\n  function calculateTotal() {\n    const _sum = dms + nameResemblance + packageMapping;\n    setSum(_sum);\n    setTotal(sum);\n    console.log('Se calcularon las metricas')\n  }\n\n  // Getting all the nodes and mapping through each item\n  let nodesDos = selectedProject.elements.nodes.map((node) => {\n    return {\n      id: node.data.id,\n      name: node.data.name,\n      module: node.data.module,\n      incomompleteProperties: node.data.incomompleteProperties,\n    };\n  });\n\n  // Getting all the edges (relaciones)\n  let edgesDos = nodeHelper.getRelationData(selectedProject);\n\n  // For loop to get the Q and answer\n  function _calculateMetrics () {\n    if (sum <= 100) {\n      console.log(edgesDos)\n      console.log(nodesDos)\n      for (let i = 0; i < edgesDos.length; i++) {\n        let flag1 = false;\n        let flag2 = false;\n        let dividen1 = 0;\n        let dividen2 = 0;\n        // for (let j = 0; j < nodesDos.length; j++) {\n          // if (\n          //   nodesDos[j].id === edgesDos[i].source &&\n          //   nodesDos[j].incomompleteProperties\n          // ) {\n          //   flag1 = true;\n          //   edgesDos[i].q = 0;\n          //   edgesDos[i].answer = 'No Aplica';\n          // }\n          // if (\n          //   nodesDos[j].id === edgesDos[i].target &&\n          //   nodesDos[j].incomompleteProperties\n          // ) {\n          //   flag2 = true;\n          //   edgesDos[i].q = 0;\n          //   edgesDos[i].answer = 'No Aplica';\n          // }\n          // if (flag1 || flag2) {\n          //   break;\n          // }\n        // }\n        // if (!flag1 && !flag2) {\n          // console.log(\"partida \" + edgesDos[i].source + \"llegada \" + edgesDos[i].target)\n          // console.log(\"Nombre: \" +  edgesDos[i].nameRessemblance + \" Mapeo \" + edgesDos[i].packageMapping)\n\n          // if (edgesDos[i].coupling >= umbralCoupling) {\n          // }\n          let x1\n          for (let index = 1; index < 5; index++) {\n            // edgesDos[i].\n\n          }\n          dividen1 = edgesDos[i].nameRessemblance * (nameResemblance/100);\n\n          dividen1 = dividen1 + edgesDos[i].packageMapping * (packageMapping/100);\n          dividen2 = edgesDos[i].dms * (dms/100);\n\n          let q = (dividen1 - dividen2) / sum;\n          edgesDos[i].q = q.toFixed(2);\n\n          // if (q >= umbral) {\n          //   edgesDos[i].answer = 'Si';\n          // } else {\n          //   edgesDos[i].answer = 'No';\n          // }\n        // }\n        //  else {\n        //   edgesDos[i].q = 'Imposible Calcular';\n        //   edgesDos[i].answer = 'Imposible Concluir';\n        // }\n      }\n    }\n  }\n  async function combineMetrics() {\n    const _weighing =setWeighing({\n      dms: dms,\n      coupling: umbralCoupling,\n      name_resemblance: nameResemblance,\n      package_mapping: packageMapping,\n    });\n    const q = await ManageCombineMetrics(user, selectedProject, _weighing);\n    for (const e in edgesDos) {\n      console.log(e)\n      edgesDos[e].q = q[e]\n    }\n  }\n\n  useEffect(() => {\n    setLoader(false);\n  }, [selectedProject.elements]);\n\n  useEffect(() => {\n    console.log('Calculo de metricas')\n     const x = setWeighing({\n       dms: dms,\n       coupling: umbralCoupling,\n       name_resemblance: nameResemblance,\n       package_mapping: packageMapping,\n     });\n    console.log(x);\n    return calculateTotal();\n  }, [dms, nameResemblance, packageMapping]);\n  // const [open, setOpen] = React.useState(false);\n  // const handleOpen = () => setOpen(true);\n  // const handleClose = () => setOpen(false);\n\n\n  return (\n    <div style={{ height: '80vh', width: '100%' }}>\n      <div className=\"form-wrapper\">\n        <form className=\"form-umbral\">\n          <div className=\"input-align-umbral\">\n            <input\n              className=\"input-styles-umbral\"\n              placeholder=\"ejm. 0.45\"\n              name=\"umbral\"\n              value={umbralName}\n              type=\"number\"\n              min=\"0\"\n              max=\"1\"\n              onChange={(e) => {\n                e.preventDefault();\n                setUmbralName(Number(e.target.value));\n              }}\n            />\n            <label className=\"input-label\">Umbral Semejanza</label>\n          </div>\n          <div className=\"btn-total\">\n            <Button onClick={calculateTotal} variant=\"contained\">\n              Calcular\n            </Button>\n          </div>\n        </form>\n        <div className=\"divider-edges\"></div>\n        <form className=\"form-styles\">\n          <div className=\"input\">\n            <div className=\"input-align\">\n              <input\n                value={dms}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setDms(+e.target.value);\n                  calculateTotal();\n                }}\n                className=\"input-styles\"\n                placeholder=\"ejm. 15\"\n                name=\"dms\"\n              />\n              <label className=\"input-label\">Peso DMS</label>\n            </div>\n            <div className=\"input-align\">\n              <input\n                className=\"input-styles\"\n                placeholder=\"ejm. 35\"\n                name=\"semejanza\"\n                value={nameResemblance}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setNameResemblance(+e.target.value);\n                  calculateTotal();\n                }}\n              />\n              <label className=\"input-label\">Peso Semejanza de Nombre</label>\n            </div>\n            <div className=\"input-align\">\n              <input\n                className=\"input-styles\"\n                placeholder=\"ejm. 35\"\n                name=\"paquete\"\n                value={packageMapping}\n                onChange={(e) => {\n                  e.preventDefault();\n                  setPackageMapping(+e.target.value);\n                  calculateTotal();\n                }}\n              />\n              <label className=\"input-label\">Peso Mapeo de Paquete</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.45\"\n                name=\"umbral\"\n                value={umbralName}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbralName(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Semejanza</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.65\"\n                name=\"umbral\"\n                value={umbralCoupling}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbralCoupling(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Acoplamiento</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"Umbral\"\n                name=\"umbral\"\n                value={umbral}\n                type=\"text\"\n                onChange={(e) => {\n                  e.preventDefault();\n                  setUmbral(Number(e.target.value));\n                }}\n              />\n              <label className=\"input-label\">Umbral Q</label>\n            </div>\n          </div>\n          <div>\n            <button onClick={() => combineMetrics()}>test</button>\n          </div>\n          <div className=\"btn-total\">\n            <Button\n              onClick={() => {\n                _calculateMetrics();\n                ManageMetrics(user, selectedProject, umbralName);\n              }}\n            >\n              Calcular Metricas\n            </Button>\n          </div>\n        </form>\n      </div>\n      <div className=\"total-sum\">\n        <p>\n          Total:<span>{total}</span>\n        </p>\n      </div>\n      {sum > 100 ? (\n        <Alert severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          El total de los pesos no puede ser mayor a 100 —{' '}\n          <strong>Vuelve a calcular!</strong>\n        </Alert>\n      ) : (\n        <Alert severity=\"success\">\n          <AlertTitle>Calculo Exitoso</AlertTitle>\n        </Alert>\n      )}\n      {!loader ? (\n        <DataGrid rows={edgesDos} columns={columns1} pageSize={10} />\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n}\n\nexport default EdgesTable;\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js",["203","204","205","206"],"import React, { useContext } from \"react\";\nimport { putMetrics, combineMetrics } from \"../../api/metrics/metrics.js\";\n\nimport AppContext from \"../../auth/context/context.js\"\nimport { ModalMessage } from \"../../components/ModalMessage/ModalMessage\";\n\n\n\n\nconst ManageMetrics = async (user, selectedProject, umbralName) => {\n    // setReloadSidebar(true);\n        await putMetrics(user,\n        selectedProject.projectIndex,\n        selectedProject.arcIndex,\n        selectedProject.verIndex,\n        umbralName);\n\n      // ModalMessage(\n      //   \"¡Metricas calculadas con exito!\",\n      //   \" \",\n      //   \"success\",\n      //   false,\n      //   4000\n      // );\n    //window.location.reload()\n  };\n\n\n  const ManageCombineMetrics = async (user, selectedProject, weighing) => {\n    await combineMetrics(\n      user,\n      selectedProject.projectIndex,\n      selectedProject.arcIndex,\n      selectedProject.verIndex,\n      weighing\n    );\n  }\n  export { ManageMetrics, ManageCombineMetrics };\n","C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js",[],"C:\\Users\\leonp\\Documents\\Tesis\\Repos tesis\\tesis-front-end-2.0\\src\\api\\login\\versions\\versions.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":95,"column":6,"nodeType":"213","endLine":95,"endColumn":27,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":166,"column":6,"nodeType":"213","endLine":166,"endColumn":10,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":172,"column":6,"nodeType":"213","endLine":172,"endColumn":19,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":14,"column":10,"nodeType":"221","messageId":"222","endLine":14,"endColumn":19},{"ruleId":"219","severity":1,"message":"223","line":4,"column":22,"nodeType":"221","messageId":"222","endLine":4,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":264,"column":1,"nodeType":"226","endLine":272,"endColumn":3},{"ruleId":"211","severity":1,"message":"227","line":112,"column":6,"nodeType":"213","endLine":112,"endColumn":14,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":166,"column":17,"nodeType":"231","messageId":"232","endLine":173,"endColumn":19},{"ruleId":"219","severity":1,"message":"233","line":21,"column":34,"nodeType":"221","messageId":"222","endLine":21,"endColumn":42},{"ruleId":"219","severity":1,"message":"234","line":51,"column":10,"nodeType":"221","messageId":"222","endLine":51,"endColumn":18},{"ruleId":"219","severity":1,"message":"235","line":87,"column":13,"nodeType":"221","messageId":"222","endLine":87,"endColumn":18},{"ruleId":"219","severity":1,"message":"236","line":88,"column":13,"nodeType":"221","messageId":"222","endLine":88,"endColumn":18},{"ruleId":"219","severity":1,"message":"237","line":118,"column":15,"nodeType":"221","messageId":"222","endLine":118,"endColumn":17},{"ruleId":"211","severity":1,"message":"238","line":172,"column":6,"nodeType":"213","endLine":172,"endColumn":44,"suggestions":"239"},{"ruleId":"219","severity":1,"message":"240","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"241","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":27},{"ruleId":"219","severity":1,"message":"242","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":18},{"ruleId":"219","severity":1,"message":"243","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":22},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["246"],"React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["248"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["249"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'elements' is assigned a value but never used.","'weighing' is assigned a value but never used.","'flag1' is assigned a value but never used.","'flag2' is assigned a value but never used.","'x1' is defined but never used.","React Hook useEffect has missing dependencies: 'calculateTotal' and 'umbralCoupling'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setWeighing' needs the current value of 'umbralCoupling'.",["250"],"'React' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'ModalMessage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [user, reloadSidebar, get]",{"range":"261","text":"262"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"263","text":"264"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"265","text":"266"},"Update the dependencies array to be: [loader, onClose]",{"range":"267","text":"268"},"Update the dependencies array to be: [calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]",{"range":"269","text":"270"},[2223,2244],"[user, reloadSidebar, get]",[4067,4071],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[4143,4156],"[checked, cy, setEdgesLabel]",[3178,3186],"[loader, onClose]",[5685,5723],"[calculateTotal, dms, nameResemblance, packageMapping, umbralCoupling]"]