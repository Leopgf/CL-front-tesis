[{"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js":"1","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js":"2","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js":"3","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Content\\Content.js":"4","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js":"5","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\versions\\versions.js":"6","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js":"7","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js":"8","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\elements\\elements.js":"9","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\index.js":"10","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Table\\Table.js":"11","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js":"12","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js":"13","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js":"14","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js":"15","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\projects\\projects.js":"16","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js":"17","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js":"18"},{"size":7717,"mtime":1665536644800,"results":"19","hashOfConfig":"20"},{"size":1717,"mtime":1665536146600,"results":"21","hashOfConfig":"20"},{"size":8338,"mtime":1665536317832,"results":"22","hashOfConfig":"20"},{"size":5823,"mtime":1654108556660,"results":"23","hashOfConfig":"20"},{"size":3142,"mtime":1654108556684,"results":"24","hashOfConfig":"20"},{"size":2592,"mtime":1654108556656,"results":"25","hashOfConfig":"20"},{"size":740,"mtime":1665536672674,"results":"26","hashOfConfig":"20"},{"size":6639,"mtime":1665527868965,"results":"27","hashOfConfig":"20"},{"size":568,"mtime":1654108556652,"results":"28","hashOfConfig":"20"},{"size":877,"mtime":1654108556687,"results":"29","hashOfConfig":"20"},{"size":2684,"mtime":1654108556677,"results":"30","hashOfConfig":"20"},{"size":3478,"mtime":1654108556673,"results":"31","hashOfConfig":"20"},{"size":2200,"mtime":1654108556663,"results":"32","hashOfConfig":"20"},{"size":2265,"mtime":1654108556651,"results":"33","hashOfConfig":"20"},{"size":648,"mtime":1654108556672,"results":"34","hashOfConfig":"20"},{"size":2302,"mtime":1654108556655,"results":"35","hashOfConfig":"20"},{"size":543,"mtime":1654108556683,"results":"36","hashOfConfig":"20"},{"size":651,"mtime":1654108556682,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"1e4v55r",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\TableItem\\Edges\\Edges.js",["80","81","82","83","84","85"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport {\r\n  putMetrics,\r\n} from \"../../../api/metrics/metrics\";\r\n\r\nimport { ManageMetrics } from \"../../../helpers/metrics/metrics\"\r\n\r\nimport AppContext from \"../../../auth/context/context\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\r\nimport \"./inputs.css\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\n/**\r\n * Componente que representa\r\n * la tabla de aristas del proyecto selecionado\r\n */\r\nconst EdgesTable = () => {\r\n  const { user, selectedProject, setReloadSidebar } = useContext(AppContext);\r\n  const [loader, setLoader] = useState(true);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 70 },\r\n    { field: \"source\", headerName: \"Origen\", width: 300 },\r\n    { field: \"target\", headerName: \"Destino\", width: 300 },\r\n    { field: \"relation\", headerName: \"Relación\", width: 200 },\r\n  ];\r\n\r\n  const columns1 = [\r\n    { field: \"id\", headerName: \"ID\", width: 70 },\r\n    { field: \"source\", headerName: \"Origen\", width: 300 },\r\n    { field: \"target\", headerName: \"Destino\", width: 300 },\r\n    { field: \"relation\", headerName: \"Relación\", width: 200 },\r\n    { field: \"coupling\", headerName: \"Coupling\", width: 200 },\r\n    { field: \"abstractness\", headerName: \"Abstracción\", width: 200 },\r\n    { field: \"instability\", headerName: \"Inestabilidad\", width: 200 },\r\n    { field: \"dms\", headerName: \"DMS\", width: 200 },\r\n    { field: \"nameRessemblance\", headerName: \"Semejanza de Nombre\", width: 200 },\r\n    { field: \"packageMapping\", headerName: \"Mapeo de Paquetes\", width: 200 },\r\n\r\n  ];\r\n\r\n  // Getting the values of each input fields\r\n  const [dms, setDms] = useState(10);\r\n  const [nameResemblance, setNameResemblance] = useState(40);\r\n  const [packageMapping, setPackageMapping] = useState(40);\r\n  const [umbralName, setUmbralName] = useState(0.65);\r\n  const [umbral, setUmbral] = useState(0.65);\r\n  const [sum, setSum] = useState(\r\n    dms + nameResemblance + packageMapping\r\n  );\r\n\r\n  // Calculate the sum total of all the input fields\r\n  function calculateTotal() {\r\n    setSum(dms + nameResemblance + packageMapping);\r\n  }\r\n\r\n  // Getting all the nodes and mapping through each item\r\n  let nodesDos = selectedProject.elements.nodes.map((node) => {\r\n    return {\r\n      id: node.data.id,\r\n      name: node.data.name,\r\n      module: node.data.module,\r\n      incompleteResources: node.data.incompleteResources,\r\n    };\r\n  });\r\n\r\n  // Getting all the edges (relaciones)\r\n  let edgesDos = nodeHelper.getRelationData(selectedProject);\r\n\r\n  // For loop to get the Q and answer\r\n\r\n  if (sum <= 100) {\r\n    for (let i = 0; i < edgesDos.length; i++) {\r\n      let flag1 = false;\r\n      let flag2 = false;\r\n      let dividen1 = 0;\r\n      let dividen2 = 0;\r\n      for (let j = 0; j < nodesDos.length; j++) {\r\n        if (\r\n          nodesDos[j].id === edgesDos[i].source &&\r\n          nodesDos[j].incompleteResources\r\n        ) {\r\n          flag1 = true;\r\n          edgesDos[i].q = 0;\r\n          edgesDos[i].answer = \"No Aplica\";\r\n        }\r\n        if (\r\n          nodesDos[j].id === edgesDos[i].target &&\r\n          nodesDos[j].incompleteResources\r\n        ) {\r\n          flag2 = true;\r\n          edgesDos[i].q = 0;\r\n          edgesDos[i].answer = \"No Aplica\";\r\n        }\r\n        if (flag1 || flag2) {\r\n          break;\r\n        }\r\n      }\r\n      if (!flag1 && !flag2) {\r\n\r\n        if (edgesDos[i].coupling >= 0.6) {\r\n          dividen1 =\r\n            edgesDos[i].nameResemblance * nameResemblance;\r\n        }\r\n        dividen1 = dividen1 + edgesDos[i].packageMapping * packageMapping;\r\n        dividen2 = edgesDos[i].dms * dms;\r\n\r\n        let q = (dividen1 - dividen2) / sum;\r\n        edgesDos[i].q = q.toFixed(2);\r\n\r\n        if (q >= umbral) {\r\n          edgesDos[i].answer = \"SI\";\r\n        } else {\r\n          edgesDos[i].answer = \"NO\";\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\")\r\n    setLoader(false);\r\n  }, [selectedProject.elements]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ height: \"80vh\", width: \"100%\" }}>\r\n      <form className=\"form-styles\">\r\n        <div className=\"input\">\r\n          <div className=\"input-align\">\r\n            <input\r\n              value={dms}\r\n              onChange={(e) => setDms(+e.target.value)}\r\n              className=\"input-styles\"\r\n              placeholder=\"W DMS\"\r\n              name=\"dms\"\r\n            />\r\n            <label className=\"input-label\">Peso DMS</label>\r\n          </div>\r\n          <div className=\"input-align\">\r\n            <input\r\n              className=\"input-styles\"\r\n              placeholder=\"W Sem. de Nombre\"\r\n              name=\"semejanza\"\r\n              value={nameResemblance}\r\n              onChange={(e) => setNameResemblance(+e.target.value)}\r\n            />\r\n            <label className=\"input-label\">Peso Semejanza de Nombre</label>\r\n          </div>\r\n          <div className=\"input-align\">\r\n            <input\r\n              className=\"input-styles\"\r\n              placeholder=\"W Mapeo de Paquete\"\r\n              name=\"paquete\"\r\n              value={packageMapping}\r\n              onChange={(e) => setPackageMapping(+e.target.value)}\r\n            />\r\n            <label className=\"input-label\">Peso Mapeo de Paquete</label>\r\n          </div>\r\n          <div className=\"input-align-umbral\">\r\n            <input\r\n              className=\"input-styles-umbral\"\r\n              placeholder=\"Umbral Semejanza\"\r\n              name=\"umbral\"\r\n              value={umbralName}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              onChange={(e) => setUmbralName(e.target.value)}\r\n            />\r\n            <label className=\"input-label\">Umbral Semejanza</label>\r\n          </div>\r\n          <div className=\"input-align-umbral\">\r\n            <input\r\n              className=\"input-styles-umbral\"\r\n              placeholder=\"Umbral\"\r\n              name=\"umbral\"\r\n              value={umbral}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              onChange={(e) => setUmbral(e.target.value)}\r\n            />\r\n            <label className=\"input-label\">Umbral Q</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-total\">\r\n          <button onClick={() => ManageMetrics(user, selectedProject, setReloadSidebar, umbralName)\r\n          }>\r\n            Calcular Metricas\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"total-sum\">\r\n        <p>\r\n          Total:<span>{sum}</span>\r\n        </p>\r\n      </div>\r\n      {sum > 100 ?\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Error</AlertTitle>\r\n          El total de los pesos no puede ser mayor a 100 — <strong>Vuelve a calcular!</strong>\r\n        </Alert>\r\n        :\r\n        <Alert severity=\"success\">\r\n          <AlertTitle>Calculo Exitoso</AlertTitle>\r\n        </Alert>\r\n      }\r\n      {!loader ? (\r\n        <DataGrid rows={edgesDos} columns={columns1} pageSize={10} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div style={{ height: 800, width: \"100%\" }}>\r\n//       <button onClick={() => ManageMetrics(user, selectedProject, setReloadSidebar)\r\n//       }>\r\n//         Calcular Metricas\r\n//       </button>\r\n//       {!loader ? (\r\n//         <DataGrid rows={edgesDos} columns={columns1} pageSize={10} />\r\n//       ) : (\r\n//         <Loader />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default EdgesTable;\r\n","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\metrics\\metrics.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\nodes\\nodes.js",["86"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Content\\Content.js",["87","88","89","90"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Content.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport AppContext from \"../../auth/context/context\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport nodesHelper from \"../../helpers/nodes/nodes\";\r\n\r\n/**\r\n * Componente que representa el contenido\r\n * de la arquitectura seleccionada\r\n */\r\nconst Content = () => {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [elementos, setElementos] = useState();\r\n  const [load, setLoad] = useState(false);\r\n  const {\r\n    selectedProject, setSelectedProject,\r\n    cy, setCy,\r\n    selectedNodes, setSelectedNodes,\r\n    setSelectionModel,\r\n  } = useContext(AppContext);\r\n\r\n  /**\r\n   * Obtener el tipo de relación\r\n   * @param {JSON} ele Objeto de cytoscape\r\n   * @returns String tipo de label\r\n   */\r\n  const getEdgeLabel = (ele) => {\r\n    if(!checked) return \"\";\r\n    switch (ele.scratch(\"relation\")) {\r\n      case \"implements\":\r\n        return \"Implementa\";\r\n      case \"extends\":\r\n        return \"Extiende\";\r\n      case \"use\":\r\n        return \"Usa\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  /** Creacion de capa de estilos para el grafo segun Cytoscape */\r\n  var state = {\r\n    layout: {\r\n      name: \"circle\",\r\n      fit: true,\r\n      padding: 30,\r\n      avoidOverlap: true,\r\n      nodeDimensionsIncludeLabels: true,\r\n      avoidOverlapPadding: 150,\r\n    },\r\n    stylesheet: [\r\n      {\r\n        selector: \"node\",\r\n        style: {\r\n          content: \"data(id)\",\r\n          \"font-size\": 20,\r\n          shape: \"round-rectangle\",\r\n          \"text-wrap\": \"wrap\",\r\n          \"text-max-width\": 80,\r\n          \"text-valign\": \"center\",\r\n          color: \"#fff\",\r\n          \"text-outline-color\": \"#18202C\",\r\n          width: 270,\r\n          color: \"white\",\r\n          height: 40,\r\n          \"background-color\": \"#18202C\",\r\n        },\r\n      },\r\n      {\r\n        selector: \"edge\",\r\n        style: {\r\n          content: getEdgeLabel,\r\n          width: 4,\r\n          \"font-size\": 20,\r\n          \"curve-style\": \"bezier\",\r\n          \"edge-text-rotation\": \"autorotate\",\r\n          \"target-arrow-shape\": \"triangle-tee\",\r\n          \"text-valign\": \"top\",\r\n          \"text-halign\": \"center\",\r\n          color: \"#fff\",\r\n          \"text-outline-color\": \"#18202C\",\r\n          \"text-outline-width\": 3,\r\n          \"line-color\": \"#18202C\",\r\n          \"target-arrow-color\": \"#18202C\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  /**\r\n   * Mostrar u ocultar el nombre de las\r\n   * relaciones entre los nodos\r\n   */\r\n  const setEdgesLabel = () => {\r\n    if (!checked) {\r\n      cy.style().selector(\"edge\").style({\r\n        content: \"\",\r\n      });\r\n    } else {\r\n      cy.style()\r\n        .selector(\"edge\")\r\n        .style({\r\n          content: getEdgeLabel\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const selectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    nodesHelper.addNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel\r\n    );\r\n    // cy.animate(\r\n    //   {\r\n    //     fit: {\r\n    //       eles: cy.getElementById(nodeId),\r\n    //       padding: 30,\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     duration: 100,\r\n    //   }\r\n    // );\r\n    evt.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Manejador de evento al dejar de seleccionar nodo\r\n   * @param {Event} event referencia al elemento\r\n   */\r\n  const unselectNodeHandler = (evt) => {\r\n    const nodeId = evt[\"target\"][\"_private\"][\"data\"].id;\r\n    // cy.fit();\r\n    nodesHelper.removeNode(\r\n      nodeId,\r\n      selectedNodes,\r\n      setSelectedNodes,\r\n      cy,\r\n      setSelectionModel\r\n    );\r\n    nodesHelper.repaintEdges(selectedNodes, cy);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      cy.on(\"select\", \"node\", selectNodeHandler);\r\n      cy.on(\"unselect\", \"node\", unselectNodeHandler);\r\n      setSelectionModel([]);\r\n      setSelectedNodes(new Set());\r\n    }\r\n  }, [cy]);\r\n\r\n  useEffect(() => {\r\n    if (cy) {\r\n      setEdgesLabel();\r\n    }\r\n  }, [checked, cy]);\r\n\r\n  useEffect(() => {\r\n    setLoad(true);\r\n    setElementos(selectedProject.elements);\r\n    //console.log(selectedProject.elements);\r\n  }, [selectedProject]);\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      setLoad(false);\r\n      setChecked(false);\r\n    }\r\n  }, [elementos, load]);\r\n\r\n  return (\r\n    <>\r\n      {load ? (\r\n        <Loader />\r\n      ) : elementos ? (\r\n        <div>\r\n          <div className={classes.onClose}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={checked}\r\n                  onChange={() => setChecked((prev) => !prev)}\r\n                />\r\n              }\r\n              labelPlacement=\"start\"\r\n              style={{ marginRight: 5 }}\r\n            />\r\n          </div>\r\n\r\n          <CytoscapeComponent\r\n            className=\"component\"\r\n            cy={(cyt) => {\r\n              setCy(cyt);\r\n            }}\r\n            elements={CytoscapeComponent.normalizeElements(elementos)}\r\n            id=\"component\"\r\n            layout={state.layout}\r\n            maxZoom={2}\r\n            pan={{ x: 150, y: 30 }}\r\n            stylesheet={state.stylesheet}\r\n            zoom={0.5}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  onClose: {\r\n    position: \"absolute\",\r\n    right: \"18px\",\r\n    top: \"75px\",\r\n    zIndex: 3,\r\n  },\r\n}));\r\n\r\nexport default Content;\r\n",["91","92"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\elements\\elements.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\versions\\versions.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\metrics\\metrics.js",["93","94","95"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\FileReader\\FileReader.js",["96","97"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\elements\\elements.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\index.js",[],["98","99"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Table\\Table.js",["100"],"import React, { useState, } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport \"./table.css\"\r\n\r\nimport TableItem from \"../TableItem/TableItem\";\r\n\r\n/**\r\n * Componente que representa \r\n * al contenedor de tabs con tablas\r\n * del proyecto selecionado\r\n */\r\nconst Table = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  /**\r\n   * Cambiar estado del drawer\r\n   */\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        onClick={handleDrawer}\r\n        edge=\"start\"\r\n        className={clsx(classes.menuButton, open && classes.hide)}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"bottom\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawer}>\r\n            <KeyboardArrowDownIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <TableItem />\r\n      </Drawer>\r\n    </div>\r\n  )\r\n};\r\n\r\n/** Creacion de capa de estilos para el componente */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    right: 0,\r\n    marginRight: 25,\r\n    backgroundColor: \"var(--primaryDark)\",\r\n    borderEndEndRadius: 0,\r\n    borderEndStartRadius: 0,\r\n    transition: \"0.5s\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      color: \"var(--primaryDark)\",\r\n    },\r\n  },\r\n  hide: {\r\n    transition: \"1s\",\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: '50%',\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)\",\r\n\r\n    width: '60%',\r\n    height: '100%',\r\n  },\r\n  drawerHeader: {\r\n    height: 40,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nexport default Table;\r\n","C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SideBar\\Sidebar.js",[],["101","102"],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\Excel\\ExcelDownloader.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\architecture\\architecture.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\components\\SelectMessage\\SelectMessage.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\api\\projects\\projects.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\helpers\\content\\downloader.js",[],"C:\\Users\\vinsh\\Documents\\Tesis\\Repos\\tesis-front-end-2.0\\src\\firebase\\googleAuth.js",[],{"ruleId":"103","severity":1,"message":"104","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":23,"column":9,"nodeType":"105","messageId":"106","endLine":23,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":55,"column":12,"nodeType":"105","messageId":"106","endLine":55,"endColumn":26},{"ruleId":"103","severity":1,"message":"109","line":128,"column":10,"nodeType":"105","messageId":"106","endLine":128,"endColumn":14},{"ruleId":"103","severity":1,"message":"110","line":129,"column":9,"nodeType":"105","messageId":"106","endLine":129,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":130,"column":9,"nodeType":"105","messageId":"106","endLine":130,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":264,"column":1,"nodeType":"114","endLine":272,"endColumn":3},{"ruleId":"103","severity":1,"message":"115","line":23,"column":22,"nodeType":"105","messageId":"106","endLine":23,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":71,"column":11,"nodeType":"118","messageId":"119","endLine":71,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":166,"column":6,"nodeType":"122","endLine":166,"endColumn":10,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":172,"column":6,"nodeType":"122","endLine":172,"endColumn":19,"suggestions":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"103","severity":1,"message":"130","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"131","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"132","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"133","line":112,"column":6,"nodeType":"122","endLine":112,"endColumn":14,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":166,"column":17,"nodeType":"137","endLine":173,"endColumn":19},{"ruleId":"126","replacedBy":"138"},{"ruleId":"128","replacedBy":"139"},{"ruleId":"116","severity":1,"message":"140","line":73,"column":5,"nodeType":"118","messageId":"119","endLine":73,"endColumn":16},{"ruleId":"126","replacedBy":"141"},{"ruleId":"128","replacedBy":"142"},"no-unused-vars","'putMetrics' is defined but never used.","Identifier","unusedVar","'columns' is assigned a value but never used.","'calculateTotal' is defined but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setSelectedProject' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectNodeHandler', 'setSelectedNodes', 'setSelectionModel', and 'unselectNodeHandler'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'setEdgesLabel'. Either include it or remove the dependency array.",["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'React' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","React Hook React.useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["147"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["145"],["146"],"Duplicate key 'marginRight'.",["145"],["146"],{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",{"range":"154","text":"155"},"Update the dependencies array to be: [checked, cy, setEdgesLabel]",{"range":"156","text":"157"},"Update the dependencies array to be: [loader, onClose]",{"range":"158","text":"159"},[4260,4264],"[cy, selectNodeHandler, setSelectedNodes, setSelectionModel, unselectNodeHandler]",[4342,4355],"[checked, cy, setEdgesLabel]",[3289,3297],"[loader, onClose]"]