[{"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/config/settings/settings.js":"1","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/Navbar/Navbar.js":"2","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/SelectMessage/SelectMessage.js":"3","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/SidebarDetail/SidebarDetail.js":"4","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/api/elements/elements.js":"5","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/screens/Home/Home.js":"6","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/helpers/errors/errors.js":"7","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/Content/Content.js":"8","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/App.js":"9","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/helpers/nodes/nodes.js":"10"},{"size":333,"mtime":1619568190275,"results":"11","hashOfConfig":"12"},{"size":6666,"mtime":1620143218143,"results":"13","hashOfConfig":"12"},{"size":623,"mtime":1616373842036,"results":"14","hashOfConfig":"12"},{"size":3726,"mtime":1618243933301,"results":"15","hashOfConfig":"12"},{"size":546,"mtime":1619021854262,"results":"16","hashOfConfig":"12"},{"size":3290,"mtime":1620143218152,"results":"17","hashOfConfig":"12"},{"size":1165,"mtime":1619021854266,"results":"18","hashOfConfig":"12"},{"size":4787,"mtime":1620145658458,"results":"19","hashOfConfig":"12"},{"size":1391,"mtime":1620145480752,"results":"20","hashOfConfig":"12"},{"size":333,"mtime":1620145591410,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1an6n8k",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/config/settings/settings.js",[],["44","45"],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/Navbar/Navbar.js",["46"],"import React, { useContext, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  manageCreateVersion,\n  manageDeleteVersion,\n  manageEditVersion,\n} from \"../../helpers/versions/versions\";\nimport { downloadGraph } from \"../../helpers/content/downloader\";\n\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport AppContext from \"../../auth/context/context\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport CreateIcon from \"@material-ui/icons/CreateNewFolderOutlined\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Modal from \"../FileReader/FileReader\";\nimport NavbarItem from \"../NavbarItem/NavbarItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\n/**\n * Componente que representa la barra\n * superior de navegacion\n */\nconst Navbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const {\n    user,\n    selectedProject,\n    setSelectedProject,\n    setReloadSidebar,\n    cy\n  } = useContext(AppContext);\n  const [showModal, setShowModal] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          {selectedProject ? (\n            <>\n              <div className={classes.title}>\n                <h1\n                  className={classes.h1}\n                  style={{ marginLeft: 0, minWidth: 145 }}\n                >\n                  {selectedProject.versionName}\n                </h1>\n                <IconButton\n                  aria-label=\"open edit\"\n                  className={classes.icon}\n                  onClick={() =>\n                    manageEditVersion(\n                      user,\n                      selectedProject,\n                      setSelectedProject,\n                      setReloadSidebar\n                    )\n                  }\n                >\n                  <EditIcon />\n                </IconButton>\n                {selectedProject.versions > 1 ? (\n                  <IconButton\n                    aria-label=\"open delete\"\n                    className={classes.icon}\n                    onClick={() =>\n                      manageDeleteVersion(\n                        user,\n                        selectedProject,\n                        setSelectedProject,\n                        setReloadSidebar\n                      )\n                    }\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                ) : null}\n              </div>\n              <div style={{ textAlign: \"right\" }}>\n                <NavbarItem\n                  icon={<GetAppIcon />}\n                  title={\"Descargar\"}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"true\"}\n                  onClick={handleClick}\n                />\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  PaperProps={{\n                    style: {\n                      padding: 10,\n                    },\n                  }}\n                >\n                  <MenuItem onClick={() => downloadGraph(\"png\", cy, \"prueba\")}>Descargar PDF</MenuItem>\n                  <MenuItem onClick={() => downloadGraph(\"jpg\", cy, \"prueba\")}>Descargar JPG</MenuItem>\n                  <MenuItem onClick={() => downloadGraph(\"png\", cy, \"prueba\")}>Descargar PNG</MenuItem>\n                </Menu>\n                <NavbarItem\n                  icon={<CreateIcon />}\n                  title={\"Crear nueva versiÃ³n\"}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"false\"}\n                  onClick={() =>\n                    manageCreateVersion(user, selectedProject, setReloadSidebar)\n                  }\n                />\n                <NavbarItem\n                  icon={<AddIcon />}\n                  aria_controls={\"simple-menu\"}\n                  aria_haspopup={\"false\"}\n                  title={\"Agregar elementos\"}\n                  onClick={() => setShowModal(true)}\n                />\n              </div>\n            </>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n      {showModal ? (\n        <Modal\n          open={showModal}\n          onClose={() => setShowModal(false)}\n          projectIndex={selectedProject.projectIndex}\n          type={\"Elementos\"}\n        />\n      ) : null}\n    </>\n  );\n};\n\n/** Creacion de capa de estilos para el componente */\nconst drawerWidth = 280;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"var(--background)\",\n  },\n\n  hide: {\n    display: \"none\",\n  },\n\n  drawer: {\n    width: drawerWidth,\n    minWidth: 200,\n    flexShrink: 0,\n    backgroundColor: \"var(--primaryDark)\",\n  },\n\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n\n  h1: {\n    color: \"var(--background)\",\n    margin: \"auto\",\n    fontFamily: \"var(font-family-content)\",\n    display: \"inline\",\n    paddingRight: 16,\n    fontSize: 24\n  },\n\n  icon: {\n    color: \"var(--background)\",\n    paddingRight: 0,\n    paddingLeft: 5,\n  },\n}));\n\nexport default Navbar;\n","/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/SelectMessage/SelectMessage.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/SidebarDetail/SidebarDetail.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/api/elements/elements.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/screens/Home/Home.js",["47"],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/helpers/errors/errors.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/components/Content/Content.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/App.js",[],"/Users/SamuelLMiller/Documents/Tesis/tesis-front/src/helpers/nodes/nodes.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":33,"column":9,"nodeType":"55","messageId":"56","endLine":33,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":94,"column":6,"nodeType":"59","endLine":94,"endColumn":27,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":13,"column":1,"nodeType":"63","endLine":16,"endColumn":2},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [user, reloadSidebar, get]",{"range":"69","text":"70"},[2208,2229],"[user, reloadSidebar, get]"]