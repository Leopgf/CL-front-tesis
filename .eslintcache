[{"/Users/cesar/Desktop/devs/tesis-front-end-2.0/src/components/TableItem/Edges/Edges.js":"1","/Users/cesar/Desktop/devs/tesis-front-end-2.0/src/components/Table/Table.js":"2"},{"size":9261,"mtime":1665712636057,"results":"3","hashOfConfig":"4"},{"size":2575,"mtime":1665712662906,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1cj0wwx",{"filePath":"9","messages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/cesar/Desktop/devs/tesis-front-end-2.0/src/components/TableItem/Edges/Edges.js",["11","12","13","14","15"],"import React, { useContext, useState, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport {\n  putMetrics,\n} from \"../../../api/metrics/metrics\";\n\nimport { ManageMetrics } from \"../../../helpers/metrics/metrics\"\n\nimport AppContext from \"../../../auth/context/context\";\nimport Loader from \"../../Loader/Loader\";\nimport nodeHelper from \"../../../helpers/nodes/nodes\";\nimport \"./inputs.css\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Button } from \"@material-ui/core\";\n\n/**\n * Componente que representa\n * la tabla de aristas del proyecto selecionado\n */\nconst EdgesTable = () => {\n  const { user, selectedProject, setReloadSidebar } = useContext(AppContext);\n  const [loader, setLoader] = useState(true);\n\n  const columns1 = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"source\", headerName: \"Origen\", width: 300 },\n    { field: \"target\", headerName: \"Destino\", width: 300 },\n    { field: \"relation\", headerName: \"Relación\", width: 200 },\n    { field: \"coupling\", headerName: \"Coupling\", width: 200 },\n    { field: \"abstractness\", headerName: \"Abstracción\", width: 200 },\n    { field: \"instability\", headerName: \"Inestabilidad\", width: 200 },\n    { field: \"dms\", headerName: \"DMS\", width: 200 },\n    { field: \"nameRessemblance\", headerName: \"Semejanza de Nombre\", width: 200 },\n    { field: \"packageMapping\", headerName: \"Mapeo de Paquetes\", width: 200 },\n    { field: \"q\", headerName: \"Q\", width: 250 },\n    { field: \"answer\", headerName: \"Candidato a Compuesto?\", width: 250 },\n\n  ];\n\n  // Getting the values of each input fields\n  const [dms, setDms] = useState(15);\n  const [nameResemblance, setNameResemblance] = useState(35);\n  const [packageMapping, setPackageMapping] = useState(35);\n  const [umbralName, setUmbralName] = useState(35);\n  const [umbralCoupling, setUmbralCoupling] = useState(0.65);\n  const [umbral, setUmbral] = useState(0.4);\n  const [sum, setSum] = useState(dms + nameResemblance + packageMapping);\n  let total = (dms + nameResemblance + packageMapping)\n\n  // Calculate the sum total of all the input fields\n  function calculateTotal() {\n    setSum(dms + nameResemblance + packageMapping);\n    total = sum;\n  }\n\n  // Getting all the nodes and mapping through each item\n  let nodesDos = selectedProject.elements.nodes.map((node) => {\n    return {\n      id: node.data.id,\n      name: node.data.name,\n      module: node.data.module,\n      incomompleteProperties: node.data.incomompleteProperties,\n    };\n  });\n\n  // Getting all the edges (relaciones)\n  let edgesDos = nodeHelper.getRelationData(selectedProject);\n\n  // For loop to get the Q and answer\n\n  if (sum <= 100) {\n    for (let i = 0; i < edgesDos.length; i++) {\n      let flag1 = false;\n      let flag2 = false;\n      let dividen1 = 0;\n      let dividen2 = 0;\n      for (let j = 0; j < nodesDos.length; j++) {\n        if (\n          nodesDos[j].id === edgesDos[i].source &&\n          nodesDos[j].incomompleteProperties\n        ) {\n\n          flag1 = true;\n          edgesDos[i].q = 0;\n          edgesDos[i].answer = \"No Aplica\";\n        }\n        if (\n          nodesDos[j].id === edgesDos[i].target && nodesDos[j].incomompleteProperties) {\n          flag2 = true;\n          edgesDos[i].q = 0;\n          edgesDos[i].answer = \"No Aplica\";\n        }\n        if (flag1 || flag2) {\n          break;\n        }\n      }\n      if (!flag1 && !flag2) {\n\n        console.log(\"partida \" + edgesDos[i].source + \"llegada \" + edgesDos[i].target)\n        console.log(\"Nombre: \" + edgesDos[i].nameRessemblance + \" Mapeo \" + edgesDos[i].packageMapping)\n\n        if (edgesDos[i].coupling >= umbralCoupling) {\n          dividen1 =\n            edgesDos[i].nameRessemblance * nameResemblance;\n        }\n\n        dividen1 = dividen1 + edgesDos[i].packageMapping * packageMapping;\n        dividen2 = edgesDos[i].dms * dms;\n\n        let q = (dividen1 - dividen2) / sum;\n        edgesDos[i].q = q.toFixed(2);\n\n        if (q >= umbral) {\n          edgesDos[i].answer = \"Si\";\n        } else {\n          edgesDos[i].answer = \"No\";\n        }\n      } else {\n        edgesDos[i].q = 'Imposible Calcular'\n        edgesDos[i].answer = 'Imposible Concluir'\n\n      }\n\n    }\n  }\n\n  useEffect(() => {\n    setLoader(false);\n  }, [selectedProject.elements]);\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n\n  return (\n    <div style={{ height: \"80vh\", width: \"100%\" }}>\n      <div className=\"form-wrapper\">\n        <form className=\"form-umbral\">\n          <div className=\"input-align-umbral\">\n            <input\n              className=\"input-styles-umbral\"\n              placeholder=\"ejm. 0.45\"\n              name=\"umbral\"\n              value={umbralName}\n              type=\"number\"\n              min=\"0\"\n              max=\"1\"\n              onChange={(e) => setUmbralName(e.target.value)}\n            />\n            <label className=\"input-label\">Umbral Semejanza</label>\n          </div>\n          <div className=\"btn-total\">\n            <Button onClick={calculateTotal} variant=\"contained\">\n              Calcular\n            </Button>\n          </div>\n        </form>\n        <div className=\"divider-edges\"></div>\n        <form className=\"form-styles\">\n          <div className=\"input\">\n            <div className=\"input-align\">\n              <input\n                value={dms}\n                onChange={(e) => {\n                  setDms(+e.target.value)\n                  calculateTotal()\n                }}\n                className=\"input-styles\"\n                placeholder=\"ejm. 15\"\n                name=\"dms\"\n              />\n              <label className=\"input-label\">Peso DMS</label>\n            </div>\n            <div className=\"input-align\">\n              <input\n                className=\"input-styles\"\n                placeholder=\"ejm. 35\"\n                name=\"semejanza\"\n                value={nameResemblance}\n                onChange={(e) => {\n                  setNameResemblance(+e.target.value)\n                  calculateTotal()\n                }}\n              />\n              <label className=\"input-label\">Peso Semejanza de Nombre</label>\n            </div>\n            <div className=\"input-align\">\n              <input\n                className=\"input-styles\"\n                placeholder=\"ejm. 35\"\n                name=\"paquete\"\n                value={packageMapping}\n                onChange={(e) => {\n                  setPackageMapping(+e.target.value)\n                  calculateTotal()\n                }}\n              />\n              <label className=\"input-label\">Peso Mapeo de Paquete</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.45\"\n                name=\"umbral\"\n                value={umbralName}\n                type=\"text\"\n                onChange={(e) => setUmbralName(e.target.value)}\n              />\n              <label className=\"input-label\">Umbral Semejanza</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"ejm. 0.65\"\n                name=\"umbral\"\n                value={umbralCoupling}\n                type=\"text\"\n                onChange={(e) => setUmbralCoupling(e.target.value)}\n              />\n              <label className=\"input-label\">Umbral Acoplamiento</label>\n            </div>\n            <div className=\"input-align-umbral\">\n              <input\n                className=\"input-styles-umbral\"\n                placeholder=\"Umbral\"\n                name=\"umbral\"\n                value={umbral}\n                type=\"text\"\n                onChange={(e) => setUmbral(e.target.value)}\n              />\n              <label className=\"input-label\">Umbral Q</label>\n            </div>\n          </div>\n\n          <div className=\"btn-total\">\n            <Button onClick={() => {\n              ManageMetrics(user, selectedProject, umbralName)\n            }\n            }>\n              Calcular Metricas\n            </Button>\n          </div>\n\n        </form >\n      </div>\n      <div className=\"total-sum\">\n        <p>\n          Total:<span>{total}</span>\n        </p>\n      </div>\n      {\n        sum > 100 ?\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            El total de los pesos no puede ser mayor a 100 — <strong>Vuelve a calcular!</strong>\n          </Alert>\n          :\n          <Alert severity=\"success\">\n            <AlertTitle>Calculo Exitoso</AlertTitle>\n          </Alert>\n      }\n      {\n        !loader ? (\n          <DataGrid rows={edgesDos} columns={columns1} pageSize={10} />\n        ) : (\n          <Loader />\n        )\n      }\n    </div >\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n//   return (\n//     <div style={{ height: 800, width: \"100%\" }}>\n//       <button onClick={() => ManageMetrics(user, selectedProject, setReloadSidebar)\n//       }>\n//         Calcular Metricas\n//       </button>\n//       {!loader ? (\n//         <DataGrid rows={edgesDos} columns={columns1} pageSize={10} />\n//       ) : (\n//         <Loader />\n//       )}\n//     </div>\n//   );\n// };\n\nexport default EdgesTable;\n\n","/Users/cesar/Desktop/devs/tesis-front-end-2.0/src/components/Table/Table.js",["16"],{"ruleId":"17","severity":1,"message":"18","line":4,"column":3,"nodeType":"19","messageId":"20","endLine":4,"endColumn":13},{"ruleId":"17","severity":1,"message":"21","line":21,"column":34,"nodeType":"19","messageId":"20","endLine":21,"endColumn":50},{"ruleId":"17","severity":1,"message":"22","line":131,"column":10,"nodeType":"19","messageId":"20","endLine":131,"endColumn":14},{"ruleId":"17","severity":1,"message":"23","line":132,"column":9,"nodeType":"19","messageId":"20","endLine":132,"endColumn":19},{"ruleId":"17","severity":1,"message":"24","line":133,"column":9,"nodeType":"19","messageId":"20","endLine":133,"endColumn":20},{"ruleId":"25","severity":1,"message":"26","line":73,"column":5,"nodeType":"27","messageId":"28","endLine":73,"endColumn":16},"no-unused-vars","'putMetrics' is defined but never used.","Identifier","unusedVar","'setReloadSidebar' is assigned a value but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginRight'.","ObjectExpression","unexpected"]